(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[28388],{17375:function(e,t,n){"use strict";function a(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}n.d(t,{Z:function(){return a}})},16935:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return s}});var a=n(96156),i=n(17375),r=(n(67294),n(3905));function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){(0,a.Z)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var p={};function s(e){var t=e.components,n=(0,i.Z)(e,["components"]);return(0,r.kt)("wrapper",l(l(l({},p),n),{},{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",l({},{id:"upgrade-guide-to-v7"}),"Upgrade Guide to v7"),(0,r.kt)("p",null,"If you have been using BuckleScript for the last couple of years, you probably\nnoticed that upgrading to the newest version has always been a seamless\nexperience without any breaking changes or performance loss. That's because the\nBuckleScript team puts a lot of effort in making sure users can upgrade as\nsoon as possible without any changes in their workflow."),(0,r.kt)("p",null,"That said, this time with the v7 release, there have been some fundamental\ncompiler changes, which means that upgrades will involve a few more installation\nsteps than usual (depending on your project setup). Luckily, the upgrade should\nstill be straight forward and easy to do."),(0,r.kt)("p",null,"This guide will highlight some of the changes and give you a list of\ninstructions to upgrade your BuckleScript projects."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Note:")," You probably noticed that the version number jumped from v5 to v7.\nThe v6 version was used for the transition phase, so if you are using v6 right\nnow, just upgrade to ",(0,r.kt)("inlineCode",{parentName:"p"},"bs-platform@7")," and you are good to go.")),(0,r.kt)("h2",l({},{id:"a-quick-look-under-the-hood"}),"A Quick Look under the Hood"),(0,r.kt)("p",null,"BuckleScript v7 (and v6) changed the underlying OCaml version from ",(0,r.kt)("inlineCode",{parentName:"p"},"4.02.3")," (BS\nv5) to ",(0,r.kt)("inlineCode",{parentName:"p"},"4.06.1"),". Usually this shouldn't impact any existing codebases, unless\nthey are using PPXes or other meta programming facilities. Simply explained,\nPPXes rely on the data representation of the OCaml / Reason syntax (AST), so if\nyou are using a tool such as ",(0,r.kt)("inlineCode",{parentName:"p"},"graphql_ppx")," (which has usually been compiled\nnatively with a ",(0,r.kt)("inlineCode",{parentName:"p"},"4.02.3")," OCaml version) you will get a compatibility error when\nused with BuckleScript v7."),(0,r.kt)("p",null,"Luckily during the transition phase between v5 and v7 (which has been an ongoing\nprocess for for several months), the community has been ",(0,r.kt)("a",l({parentName:"p"},{href:"https://github.com/BuckleScript/bucklescript/issues/3914"}),"coordinating\nefforts")," to upgrade\nand release commonly used tools to BS v7 compatible compile artifacts. You will\nfind all installation instructions in this guide as well."),(0,r.kt)("h3",l({},{id:"bs-version-overview--features"}),"BS Version Overview / Features"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"BS 5.x and below"),": based on OCaml 4.02.3"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"BS 6.x and above"),": based on OCaml 4.06.1 (transition version: if in use, upgrade to v7 now)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"BS 7.x and above"),": based on OCaml 4.06.1 (stops 4.02.3 support)",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Adds ",(0,r.kt)("a",l({parentName:"li"},{href:"https://caml.inria.fr/pub/docs/manual-ocaml/inlinerecords.html"}),(0,r.kt)("inlineCode",{parentName:"a"},"Inline\nRecords")),"\nsupport (introduced with ",(0,r.kt)("inlineCode",{parentName:"li"},"4.03"),")"),(0,r.kt)("li",{parentName:"ul"},"Adds the ",(0,r.kt)("inlineCode",{parentName:"li"},"Records-as-Objects")," feature, which makes BS compile record type\nvalues into JS objects instead of nested arrays (see blog ",(0,r.kt)("a",l({parentName:"li"},{href:"//bucklescript.github.io/blog/2019/11/18/whats-new-in-7"}),"post 1"),"\nand ",(0,r.kt)("a",l({parentName:"li"},{href:"//bucklescript.github.io/blog/2019/12/27/whats-new-in-7-cont"}),"post 2"),")"),(0,r.kt)("li",{parentName:"ul"},"Ships with ",(0,r.kt)("inlineCode",{parentName:"li"},"refmt")," version ",(0,r.kt)("inlineCode",{parentName:"li"},"3.5.1")," with greatly improved syntax error messages (codename ",(0,r.kt)("inlineCode",{parentName:"li"},"reerror"),")")))),(0,r.kt)("p",null,"The biggest upside of upgrading to BS v7, beside enjoying newer language\nfeatures, is that we will finally be able to deprecate  underlying OCaml\n",(0,r.kt)("inlineCode",{parentName:"p"},"4.02.3")," code, which will make maintenance way easier (lots of code / processes\ncan be removed and simplified). Also the OCaml community will greatly benefit\nfrom this change, since a lot of OCaml libraries still have to support a minimum\nOCaml version of ",(0,r.kt)("inlineCode",{parentName:"p"},"4.02.3")," just for BuckleScript <= v5 compatibility."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"We recommend upgrading to BS v7 as soon as possible. Your Reason code will\nstill work as expected, you'll only need to upgrade your native tools to make\neverything behave correctly.")),(0,r.kt)("p",null,"Please support us moving forward and help us by providing bug reports in case\nyou have any issues."),(0,r.kt)("h2",l({},{id:"how-to-upgrade-to-v7"}),"How to upgrade to v7"),(0,r.kt)("h3",l({},{id:"dependencies"}),"Dependencies"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note:")," During the migration phase, some projects / repositories have changed\nowners or Github organizations to make it easier for us to upgrade build\nartifacts in the future. If you are using a PPX we are not aware of, please ",(0,r.kt)("a",l({parentName:"p"},{href:"https://github.com/BuckleScript/bucklescript/issues/3914"}),"let us\nknow in this issue"),"."),(0,r.kt)("h4",l({},{id:"upgrade-your-bs-platform-dependency"}),"Upgrade your bs-platform dependency:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"npm install bs-platform@7 --dev"))),(0,r.kt)("h4",l({},{id:"upgrade-any-ppx-dependencies-youre-using"}),"Upgrade any PPX dependencies you're using:"),(0,r.kt)("p",null,(0,r.kt)("a",l({parentName:"p"},{href:"https://github.com/mhallin/graphql_ppx"}),(0,r.kt)("inlineCode",{parentName:"a"},"graphql_ppx"))," ->\n",(0,r.kt)("a",l({parentName:"p"},{href:"https://github.com/baransu/graphql_ppx_re"}),(0,r.kt)("inlineCode",{parentName:"a"},"graphql_ppx_re")),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Remove the ",(0,r.kt)("a",l({parentName:"li"},{href:"https://github.com/mhallin/graphql_ppx"}),"deprecated ",(0,r.kt)("inlineCode",{parentName:"a"},"graphql_ppx")," (by\nmhallin)"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"npm remove\ngraphql_ppx")),(0,r.kt)("li",{parentName:"ul"},"Add the new one: ",(0,r.kt)("inlineCode",{parentName:"li"},"npm install @baransu/graphql_ppx_re --save-dev")),(0,r.kt)("li",{parentName:"ul"},"Update your ",(0,r.kt)("inlineCode",{parentName:"li"},"ppx-flags"),": ",(0,r.kt)("inlineCode",{parentName:"li"},'"ppx-flags": ["@baransu/graphql_ppx_re/ppx6"]'))),(0,r.kt)("p",null,(0,r.kt)("a",l({parentName:"p"},{href:"https://github.com/cristianoc/genType"}),(0,r.kt)("inlineCode",{parentName:"a"},"gentype")),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"npm install gentype@3 --save-dev"))),(0,r.kt)("p",null,(0,r.kt)("a",l({parentName:"p"},{href:"https://github.com/reasonml-labs/decco"}),(0,r.kt)("inlineCode",{parentName:"a"},"decco")),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"npm install decco@1 --save-dev"))),(0,r.kt)("p",null,(0,r.kt)("a",l({parentName:"p"},{href:"https://github.com/reasonml-labs/bs-let"}),(0,r.kt)("inlineCode",{parentName:"a"},"bs-let")),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"npm install --save-dev bs-let")),(0,r.kt)("li",{parentName:"ul"},"Update your ",(0,r.kt)("inlineCode",{parentName:"li"},"ppx-flags"),": ",(0,r.kt)("inlineCode",{parentName:"li"},'"ppx-flags": ["bs-let/ppx"]'))),(0,r.kt)("p",null,(0,r.kt)("a",l({parentName:"p"},{href:"https://github.com/ahrefs/bs-emotion"}),(0,r.kt)("inlineCode",{parentName:"a"},"bs-emotion-ppx")),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"npm install bs-emotion-ppx@1 --save-dev")),(0,r.kt)("li",{parentName:"ul"},"Update your ",(0,r.kt)("inlineCode",{parentName:"li"},"ppx-flags"),": ",(0,r.kt)("inlineCode",{parentName:"li"},'"ppx-flags": ["@ahrefs/bs-emotion-ppx/bin/bs-emotion-ppx"]'))),(0,r.kt)("p",null,(0,r.kt)("a",l({parentName:"p"},{href:"https://github.com/MinimaHQ/bs-log"}),(0,r.kt)("inlineCode",{parentName:"a"},"bs-log"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Currently WIP and ",(0,r.kt)("a",l({parentName:"li"},{href:"https://github.com/MinimaHQ/bs-log/issues/10"}),"not done\nyet"))),(0,r.kt)("p",null,(0,r.kt)("a",l({parentName:"p"},{href:"https://github.com/astrada/ppx_bs_css"}),(0,r.kt)("inlineCode",{parentName:"a"},"ppx_bs_css")),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"No upgrade activity yet, please ",(0,r.kt)("a",l({parentName:"li"},{href:"https://github.com/BuckleScript/bucklescript/issues/3914"}),"let us\nknow")," if you are\nusing it!")),(0,r.kt)("h4",l({},{id:"clean--rebuild-your-project"}),"Clean & Rebuild your project:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"npx bsb -clean-world")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"npx bsb -make-world")),(0,r.kt)("li",{parentName:"ul"},"Your project should now be built and working correctly")),(0,r.kt)("h4",l({},{id:"fix-specific-warnings"}),"Fix specific warnings:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"BuckleScript warning: isWebUri : the external name is inferred from val\nname is unsafe from refactoring when changing value name")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"This  means that you have ",(0,r.kt)("inlineCode",{parentName:"p"},"external")," bindings ending with ",(0,r.kt)("inlineCode",{parentName:"p"},'= "";'),"\n(which will automatically take the name of the binding itself), you\nnow need to be explicit with the name. Example:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",l({parentName:"pre"},{className:"language-reason"}),'/* Before (warning) */\n[@bs.module "valid-url"]\nexternal isWebUri: string => option(string) = "";\n\n/* After (fixed the warning) */\n[@bs.module "valid-url"]\nexternal isWebUri: string => option(string) = "isWebUri";\n'))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Don't forget to rebuild your project again"))),(0,r.kt)("h4",l({},{id:"commit-your-changes"}),"Commit your changes:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Your ",(0,r.kt)("inlineCode",{parentName:"li"},".bs.js")," files will very likely change, make sure to commit\neverything to have a clean BS upgrade commit")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note:")," Since this upgrade will change the internal data representation of\nrecords to JS objects, make sure you are not having any Reason code relying on\nthe previous record-as-array representation. This is a quick reminder that it is\ngenerally discouraged to rely on internal data structures."),(0,r.kt)("h3",l({},{id:"editor-extensions"}),"Editor extensions"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",l({parentName:"li"},{href:"https://github.com/jaredly/reason-language-server"}),(0,r.kt)("inlineCode",{parentName:"a"},"reason-vscode / reason-language-server")),":\nShould just work, especially when upgraded to the newest version"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",l({parentName:"li"},{href:"https://github.com/ocaml/merlin"}),(0,r.kt)("inlineCode",{parentName:"a"},"merlin")),": Make sure your ",(0,r.kt)("inlineCode",{parentName:"li"},"ocamlmerlin")," binary is\ncompiled for ",(0,r.kt)("inlineCode",{parentName:"li"},"4.06.1")," and correctly set in your PATH, other than that it should just work"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",l({parentName:"li"},{href:"https://github.com/reasonml-editor/reasonml-idea-plugin"}),(0,r.kt)("inlineCode",{parentName:"a"},"reasonml-idea-plugin")),": Upgrade to version ",(0,r.kt)("inlineCode",{parentName:"li"},"v0.76")," or above")),(0,r.kt)("h2",l({},{id:"how-to-upgrade-ppxes-for-tool-maintainers"}),"How to upgrade PPXes (for tool maintainers)"),(0,r.kt)("h3",l({},{id:"step-1-upgrade-build-dependencies"}),"Step 1: Upgrade build dependencies"),(0,r.kt)("p",null,"We recommend using ",(0,r.kt)("a",l({parentName:"p"},{href:"https://esy.sh"}),"esy")," for building your native project, so\nall instructions are based on the ",(0,r.kt)("inlineCode",{parentName:"p"},"esy")," workflows. Mostly it's about setting the\nOCaml version to 4.06 and rebuild the project accordingly (e.g. in your ",(0,r.kt)("inlineCode",{parentName:"p"},"package.json"),"):"),(0,r.kt)("pre",null,(0,r.kt)("code",l({parentName:"pre"},{className:"language-json"}),'"devDependencies": {\n    "ocaml": "~4.6.1000",\n    "@opam/dune": "*",\n}\n')),(0,r.kt)("p",null,"If you are using ",(0,r.kt)("inlineCode",{parentName:"p"},"migrate-parse-tree"),", you might want to drop any AST upgrades\nfrom 4.02 -> 4.06 etc, making the native binary more lightweight. "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Tip:")," If you still want to maintain a ",(0,r.kt)("inlineCode",{parentName:"p"},"4.02.3")," based version (for legacy\nreasons), you can alternatively create a ",(0,r.kt)("inlineCode",{parentName:"p"},"esy.json")," / ",(0,r.kt)("inlineCode",{parentName:"p"},"esy-406.json")," file and\nuse ",(0,r.kt)("inlineCode",{parentName:"p"},"esy's")," ",(0,r.kt)("a",l({parentName:"p"},{href:"https://esy.sh/docs/en/multiple-sandboxes.html#configure-multiple-sandboxes"}),"sandboxing\nfeature"),"."),(0,r.kt)("p",null,"We know that these instructions are very rough, many projects use different\nconfigurations. To give you some inspiration on how to tackle an upgrade, here\nis a list of migrations / project setups you might find useful:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"bs-emotion-ppx"),": ",(0,r.kt)("a",l({parentName:"li"},{href:"https://github.com/ahrefs/bs-emotion/commit/d93f35754d2ba3000d5ffa9fe17ae158da6dfc38"}),"Full migration diff by anmonteiro")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"graphql_ppx_re"),": ",(0,r.kt)("a",l({parentName:"li"},{href:"https://github.com/baransu/graphql_ppx_re/blob/master/esy.json"}),"package.json with 4.06\nsupport")," //\n",(0,r.kt)("a",l({parentName:"li"},{href:"https://github.com/baransu/graphql_ppx_re/blob/master/402.json"}),"402.json for esy\nsandbox")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"decco"),": ",(0,r.kt)("a",l({parentName:"li"},{href:"https://github.com/reasonml-labs/decco/blob/master/ppx_src/package.json"}),"package.json for 4.06"))),(0,r.kt)("h3",l({},{id:"step-2-release-artifacts-and-add-a-proper-note-in-the-readme"}),"Step 2: Release artifacts and add a proper Note in the README"),(0,r.kt)("p",null,"Make sure to release the newly built binary on npm and make clear which PPX versions are compatible with BS6 / BS5 etc.\nFor example, this is how ",(0,r.kt)("inlineCode",{parentName:"p"},"gentype")," does it:"),(0,r.kt)("pre",null,(0,r.kt)("code",l({parentName:"pre"},{}),"bs-platform 7.0.0 or higher: use genType 3.2.0 or higher.\nbs-platform 6.2.0 or higher: use genType 3.0.0 or higher.\nbs-platform 5.2.0 or higher: use genType 2.40.0 or higher.\nbs-platform 5.0.x and 5.1.x: use genType 2.17.0 or higher.\n")),(0,r.kt)("h2",l({},{id:"conclusion"}),"Conclusion"),(0,r.kt)("p",null,"We are really excited for the upcoming future of BuckleScript. The v7 release\nwill make JS interop considerably easier while being completely compatible with\nexisting codebases."),(0,r.kt)("p",null,"If you are experiencing any installation / upgrade issues, please be sure to\neither check the BuckleScript ",(0,r.kt)("a",l({parentName:"p"},{href:"https://github.com/bucklescript/bucklescript/issues"}),"issue\ntracker"),", or drop us a\nmessage in ",(0,r.kt)("a",l({parentName:"p"},{href:"https://discord.gg/reasonml"}),"Discord"),"."))}s.isMDXComponent=!0,s.frontmatter={__ghEditHref:"https://github.com/reason-association/rescript-lang.org/blob/master/pages/docs/reason-compiler/latest/upgrade-to-v7.mdx"}},49839:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/reason-compiler/latest/upgrade-to-v7",function(){return n(16935)}])}},function(e){e.O(0,[92888,49774,40179],(function(){return t=49839,e(e.s=t);var t}));var t=e.O();_N_E=t}]);