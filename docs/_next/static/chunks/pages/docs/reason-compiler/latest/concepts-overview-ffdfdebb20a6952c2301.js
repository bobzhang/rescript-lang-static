(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2947],{17375:function(e,t,r){"use strict";function n(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}r.d(t,{Z:function(){return n}})},70641:function(e,t,r){"use strict";r.r(t),r.d(t,{default:function(){return c}});var n=r(96156),o=r(17375),a=(r(67294),r(3905));function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){(0,n.Z)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var s={};function c(e){var t=e.components,r=(0,o.Z)(e,["components"]);return(0,a.kt)("wrapper",l(l(l({},s),r),{},{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",l({},{id:"concepts-overview"}),"Concepts Overview"),(0,a.kt)("p",null,"Before starting the next few sections, here are a helpful things to know:"),(0,a.kt)("h2",l({},{id:"ocaml"}),"OCaml"),(0,a.kt)("p",null,"This is the backing of BuckleScript. BuckleScript is a fork of OCaml, specifically ",(0,a.kt)("inlineCode",{parentName:"p"},"v4.02.3")," (upgrade impending!). This doc site assumes basic knowledge of OCaml; you can learn OCaml through ",(0,a.kt)("a",l({parentName:"p"},{href:"https://realworldocaml.org/"}),"Real World OCaml")," or, if you're learning Reason anyway, start with the ",(0,a.kt)("a",l({parentName:"p"},{href:"/docs/manual/latest/introduction"}),"Reason Manual"),"."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"This documentation site will mostly cover just the extra bits we've added to OCaml to enable good JS interoperability"),"."),(0,a.kt)("h2",l({},{id:"reason"}),"Reason"),(0,a.kt)("p",null,"An alternative syntax for OCaml that's more familiar to JS programmers and reduces the learning overhead a bit. Reason works with OCaml, since apart from the syntax they share most other things. This also means Reason works with BuckleScript. The latter has some first-class support for some other utilities of Reason."),(0,a.kt)("h2",l({},{id:"opam"}),"OPAM"),(0,a.kt)("p",null,"This is OCaml's official package manager. Since BuckleScript uses NPM and Yarn, you won't need OPAM as a beginner. We will mention it for advanced workflows. If you already know OPAM and want to install OCaml toolchains like merlin, you should install those native tool chains under switch 4.06.1"),(0,a.kt)("h2",l({},{id:"externalinteropffi"}),"External/Interop/FFI"),(0,a.kt)("p",null,"These are all jargon for working with BuckleScript <-> JavaScript."),(0,a.kt)("p",null,"External: in the context of BuckleScript, one of the primary ways to use a JS value."),(0,a.kt)("p",null,'Interop: short for "interoperability".'),(0,a.kt)("p",null,'FFI: Foreign Function Interface. The general term for things like "external", "wrapper" and "interop". Basically means calling a value from the other language. Prefer the first two terms.'))}c.isMDXComponent=!0,c.frontmatter={__ghEditHref:"https://github.com/reason-association/rescript-lang.org/blob/master/pages/docs/reason-compiler/latest/concepts-overview.mdx"}},19431:function(e,t,r){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/reason-compiler/latest/concepts-overview",function(){return r(70641)}])}},function(e){e.O(0,[92888,49774,40179],(function(){return t=19431,e(e.s=t);var t}));var t=e.O();_N_E=t}]);