(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[77662],{17375:function(e,t,n){"use strict";function a(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}n.d(t,{Z:function(){return a}})},43876:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return s}});var a=n(96156),i=n(17375),r=(n(67294),n(3905));function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){(0,a.Z)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var l={};function s(e){var t=e.components,n=(0,i.Z)(e,["components"]);return(0,r.kt)("wrapper",o(o(o({},l),n),{},{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",o({},{id:"getting-started"}),"Getting Started"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"genType")," is tightly integrated in the ReScript Compiler. It only requires minimal setup."),(0,r.kt)("h2",o({},{id:"setup"}),"Setup"),(0,r.kt)("p",null,"Install the binaries via ",(0,r.kt)("inlineCode",{parentName:"p"},"npm")," (or ",(0,r.kt)("inlineCode",{parentName:"p"},"yarn"),"):"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{}),"npm install --save-dev gentype\n\n# Verify installed gentype binary\nnpx gentype --help\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note:")," Version requirements / compatibility list can be found ",(0,r.kt)("a",o({parentName:"p"},{href:"https://github.com/rescript-association/genType#requirements"}),"here"),"."),(0,r.kt)("p",null,"Add a ",(0,r.kt)("inlineCode",{parentName:"p"},"gentypeconfig")," section to your ",(0,r.kt)("inlineCode",{parentName:"p"},"bsconfig.json")," (See ",(0,r.kt)("a",o({parentName:"p"},{href:"#configuration"}),"Configuration")," for details):"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{}),'"gentypeconfig": {\n    "language": "typescript",\n    "shims": {},\n    "generatedFileExtension": ".gen.tsx",\n    "debug": {\n      "all": false,\n      "basic": false\n    }\n}\n')),(0,r.kt)("p",null,"For running ",(0,r.kt)("inlineCode",{parentName:"p"},"genType")," with ReScript via ",(0,r.kt)("inlineCode",{parentName:"p"},"npm")," workflow, no special setup is required in ",(0,r.kt)("inlineCode",{parentName:"p"},"package.json"),"."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Note:")," ",(0,r.kt)("inlineCode",{parentName:"p"},"rescript")," will automatically detect your installed ",(0,r.kt)("inlineCode",{parentName:"p"},"genType")," version.")),(0,r.kt)("h2",o({},{id:"configuration"}),"Configuration"),(0,r.kt)("p",null,"Every ",(0,r.kt)("inlineCode",{parentName:"p"},"genType")," powered project requires a configuration item ",(0,r.kt)("inlineCode",{parentName:"p"},'"gentypeconfig"'),"\nat top level in the project's ",(0,r.kt)("inlineCode",{parentName:"p"},"bsconfig.json"),". The configuration has following\nstructure:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-js"}),'  //...\n  "gentypeconfig": {\n    "language": "typescript" | "flow" | "untyped",\n    "generatedFileExtension": ".gen.tsx",\n    "shims": {\n      "ReasonReact": "ReactShim"\n    }\n  }\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"generatedFileExtension")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"File extension used for genType generated files (defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},".gen.tsx"),")"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"language")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"typescript"')," : Generate ",(0,r.kt)("inlineCode",{parentName:"li"},"*.gen.tsx")," files written in TypeScript."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"flow"'),": Generate ",(0,r.kt)("inlineCode",{parentName:"li"},"*.gen.js")," files with Flow type annotations."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"untyped"'),": Generate ",(0,r.kt)("inlineCode",{parentName:"li"},"*.gen.js")," files in vanilla JavaScript."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"shims")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Required only if one needs to export certain basic ReScript data types to JS when one cannot modify the sources to add annotations (e.g. exporting ReScript lists), and if the types are not first-classed in genType."),(0,r.kt)("li",{parentName:"ul"},"Example: ",(0,r.kt)("inlineCode",{parentName:"li"},"Array<string>")," with format: ",(0,r.kt)("inlineCode",{parentName:"li"},'"RescriptModule=JavaScriptModule"'))))),(0,r.kt)("h2",o({},{id:"adding-shims-ts--flow"}),"Adding Shims (TS & Flow)"),(0,r.kt)("p",null,"A shim is a TS / Flow file that provides user-provided definitions for library types."),(0,r.kt)("p",null,"Configure your shim files within ",(0,r.kt)("inlineCode",{parentName:"p"},'"gentypeconfig"')," in your ",(0,r.kt)("a",o({parentName:"p"},{href:"https://github.com/reason-association/genType/blob/master/examples/typescript-react-example/bsconfig.json"}),(0,r.kt)("inlineCode",{parentName:"a"},"bsconfig.json")),", and add relevant ",(0,r.kt)("inlineCode",{parentName:"p"},".shims.js")," files in a directory which is visible by ReScript e.g.  ",(0,r.kt)("a",o({parentName:"p"},{href:"https://github.com/reason-association/genType/blob/master/examples/typescript-react-example/src/shims"}),(0,r.kt)("inlineCode",{parentName:"a"},"src/shims/")),". An example shim to export ReactEvent can be found ",(0,r.kt)("a",o({parentName:"p"},{href:"https://github.com/reason-association/genType/blob/master/examples/typescript-react-example/src/shims/ReactEvent.shim.ts"}),"here"),"."),(0,r.kt)("h2",o({},{id:"testing-the-whole-setup"}),"Testing the Whole Setup"),(0,r.kt)("p",null,"Open any relevant ",(0,r.kt)("inlineCode",{parentName:"p"},"*.res")," file and add ",(0,r.kt)("inlineCode",{parentName:"p"},"@genType")," annotations to any bindings / values / functions to be used from JavaScript. If an annotated value uses a type, the type must be annotated too. See e.g.  ",(0,r.kt)("a",o({parentName:"p"},{href:"https://github.com/reason-association/genType/blob/master/examples/typescript-react-example/src/Hooks.res"}),"Hooks.res"),"."),(0,r.kt)("p",null,"Save the file and rebuild the project via ",(0,r.kt)("inlineCode",{parentName:"p"},"npm run bs:build")," or similar. You should now see a ",(0,r.kt)("inlineCode",{parentName:"p"},"*.gen.tsx")," (for TypeScript, or ",(0,r.kt)("inlineCode",{parentName:"p"},"*.gen.js")," for Flow) file with the same name (e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"MyComponent.res")," -> ",(0,r.kt)("inlineCode",{parentName:"p"},"MyComponent.gen.tsx"),")."),(0,r.kt)("p",null,"Any values exported from ",(0,r.kt)("inlineCode",{parentName:"p"},"MyComponent.res")," can then be imported from JS. For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-js"}),'import MyComponent from "./components/MyComponent.gen";\n')),(0,r.kt)("h2",o({},{id:"examples"}),"Examples"),(0,r.kt)("p",null,"We prepared some examples to give you an idea on how to integrate ",(0,r.kt)("inlineCode",{parentName:"p"},"genType")," in your own project. Check out the READMEs of the listed projects."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Please make sure to build genType before trying to build the examples.")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",o({parentName:"li"},{href:"https://github.com/reason-association/genType/tree/master/examples/typescript-react-example"}),"typescript-react-example")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",o({parentName:"li"},{href:"https://github.com/reason-association/genType/tree/master/examples/flow-react-example"}),"flow-react-example")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",o({parentName:"li"},{href:"https://github.com/reason-association/genType/tree/master/examples/untyped-react-example"}),"untyped-react-example"))),(0,r.kt)("h2",o({},{id:"experimental-features"}),"Experimental features"),(0,r.kt)("p",null,"These features are for experimentation only. They could be changed/removed any time, and not be considered breaking changes."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Export object and record types as interfaces. To activate, add ",(0,r.kt)("inlineCode",{parentName:"p"},'"exportInterfaces": true')," to the configuration. The types are also renamed from ",(0,r.kt)("inlineCode",{parentName:"p"},"name")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"Iname"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Emit prop types for the untyped back-end. To activate, add ",(0,r.kt)("inlineCode",{parentName:"p"},'"propTypes": true')," and ",(0,r.kt)("inlineCode",{parentName:"p"},'"language": "untyped"')," to the configuration."))),(0,r.kt)("h2",o({},{id:"limitations"}),"Limitations"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"in-source = true"),". Currently only supports ReScript projects with ",(0,r.kt)("a",o({parentName:"p"},{href:"/docs/manual/latest/build-configuration#package-specs"}),"in-source generation")," and ",(0,r.kt)("inlineCode",{parentName:"p"},".bs.js")," file suffix.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Limited namespace support"),". Currently there's limited ",(0,r.kt)("a",o({parentName:"p"},{href:"/docs/manual/latest/build-configuration#name-namespace"}),"namespace")," support, and only ",(0,r.kt)("inlineCode",{parentName:"p"},"namespace:true")," is possible, not e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},'namespace:"custom"'),"."))),(0,r.kt)("h2",o({},{id:"changelog"}),"Changelog"),(0,r.kt)("p",null,"See ",(0,r.kt)("a",o({parentName:"p"},{href:"https://github.com/reason-association/genType/blob/master/Changes.md"}),"Changes.md")," for a complete list of features, fixes, and changes for each release."))}s.isMDXComponent=!0,s.frontmatter={title:"Getting Started",description:"How to get started with genType in your ReScript projects",canonical:"/docs/gentype/latest/getting-started",__ghEditHref:"https://github.com/reason-association/rescript-lang.org/blob/master/pages/docs/gentype/latest/getting-started.mdx"}},63219:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/gentype/latest/getting-started",function(){return n(43876)}])}},function(e){e.O(0,[92888,49774,40179],(function(){return t=63219,e(e.s=t);var t}));var t=e.O();_N_E=t}]);