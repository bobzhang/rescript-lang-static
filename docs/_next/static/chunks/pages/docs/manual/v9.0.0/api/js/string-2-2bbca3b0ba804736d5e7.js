(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3712],{17375:function(e,t,n){"use strict";function a(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}n.d(t,{Z:function(){return a}})},86133:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return g}});var a=n(17375),r=n(96156),i=(n(67294),n(3905));function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){(0,r.Z)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var o,p=(o="Intro",function(e){return console.warn("Component "+o+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",l({},e))}),m={};function g(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,i.kt)("wrapper",l(l(l({},m),n),{},{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",l({},{id:"string2"}),"String2"),(0,i.kt)(p,{mdxType:"Intro"},(0,i.kt)("p",null,"Provide bindings to JS string. Optimized for pipe-first.")),(0,i.kt)("h2",l({},{id:"t"}),"t"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"prelude",prelude:!0}),"type t = string\n")),(0,i.kt)("h2",l({},{id:"make"}),"make"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let make: 'a => t\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"make(value)")," converts the given value to a ",(0,i.kt)("inlineCode",{parentName:"p"},"string"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.make(3.5) == "3.5"\nJs.String2.make([1, 2, 3]) == "1,2,3"\n')),(0,i.kt)("h2",l({},{id:"fromcharcode"}),"fromCharCode"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let fromCharCode: int => t\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"fromCharCode(n)")," creates a ",(0,i.kt)("inlineCode",{parentName:"p"},"string")," containing the character corresponding to that number; ",(0,i.kt)("inlineCode",{parentName:"p"},"n")," ranges from 0 to 65535.\nIf out of range, the lower 16 bits of the value are used. Thus, ",(0,i.kt)("inlineCode",{parentName:"p"},"fromCharCode(0x1F63A)")," gives the same result as ",(0,i.kt)("inlineCode",{parentName:"p"},"fromCharCode(0xF63A)"),". See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.fromCharCode"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.fromCharCode(65) == "A"\nJs.String2.fromCharCode(0x3c8) == `\u03c8`\nJs.String2.fromCharCode(0xd55c) == `\ud55c`\nJs.String2.fromCharCode(-64568) == `\u03c8`\n')),(0,i.kt)("h2",l({},{id:"fromcharcodemany"}),"fromCharCodeMany"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let fromCharCodeMany: array<int> => t\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"fromCharCodeMany([n1, n2, n3])")," creates a ",(0,i.kt)("inlineCode",{parentName:"p"},"string")," from the characters corresponding to the given numbers, using the same rules as ",(0,i.kt)("inlineCode",{parentName:"p"},"fromCharCode"),". See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.fromCharCode"))," on MDN."),(0,i.kt)("h2",l({},{id:"fromcodepoint"}),"fromCodePoint"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let fromCodePoint: int => t\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"fromCodePoint(n)")," creates a ",(0,i.kt)("inlineCode",{parentName:"p"},"string")," containing the character corresponding to that numeric code point.\nIf the number is not a valid code point, it raises ",(0,i.kt)("inlineCode",{parentName:"p"},"RangeError"),".\nThus, ",(0,i.kt)("inlineCode",{parentName:"p"},"fromCodePoint(0x1F63A)")," will produce a correct value, unlike ",(0,i.kt)("inlineCode",{parentName:"p"},"fromCharCode(0x1F63A)"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"fromCodePoint(-5)")," will raise a ",(0,i.kt)("inlineCode",{parentName:"p"},"RangeError"),". See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.fromCodePoint"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.fromCodePoint(65) == "A"\nJs.String2.fromCodePoint(0x3c8) == `\u03c8`\nJs.String2.fromCodePoint(0xd55c) == `\ud55c`\nJs.String2.fromCodePoint(0x1f63a) == `\ud83d\ude3a`\n')),(0,i.kt)("h2",l({},{id:"fromcodepointmany"}),"fromCodePointMany"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let fromCodePointMany: array<int> => t\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"fromCodePointMany([n1, n2, n3])")," creates a ",(0,i.kt)("inlineCode",{parentName:"p"},"string")," from the characters corresponding to the given code point numbers, using the same rules as ",(0,i.kt)("inlineCode",{parentName:"p"},"fromCodePoint"),". See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.fromCodePoint"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),"Js.String2.fromCodePointMany([0xd55c, 0xae00, 0x1f63a]) == `\ud55c\uae00\ud83d\ude3a`\n")),(0,i.kt)("h2",l({},{id:"length"}),"length"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let length: t => int\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"length(s)")," returns the length of the given ",(0,i.kt)("inlineCode",{parentName:"p"},"string"),". See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/length"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.length"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.length("abcd") == 4\n')),(0,i.kt)("h2",l({},{id:"get"}),"get"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let get: (t, int) => t\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"get(s, n)")," returns as a ",(0,i.kt)("inlineCode",{parentName:"p"},"string")," the character at the given index number.\nIf ",(0,i.kt)("inlineCode",{parentName:"p"},"n")," is out of range, this function returns ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined"),",so at some point this function may be modified to return ",(0,i.kt)("inlineCode",{parentName:"p"},"option(string)"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.get("Reason", 0) == "R"\nJs.String2.get("Reason", 4) == "o"\nJs.String2.get(`R\u1ebdas\xf6\u0144`, 5) == `\u0144`\n')),(0,i.kt)("h2",l({},{id:"charat"}),"charAt"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let charAt: (t, int) => t\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"charAt(s, n)")," gets the character at index ",(0,i.kt)("inlineCode",{parentName:"p"},"n")," within string ",(0,i.kt)("inlineCode",{parentName:"p"},"s"),".\nIf ",(0,i.kt)("inlineCode",{parentName:"p"},"n")," is negative or greater than the length of ",(0,i.kt)("inlineCode",{parentName:"p"},"s"),", it returns the empty string.\nIf the string contains characters outside the range \\u0000-\\uffff, it will return the first 16-bit value at that position in the string. See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charAt"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.charAt"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.charAt("Reason", 0) == "R"\nJs.String2.charAt("Reason", 12) == ""\nJs.String2.charAt(`R\u1ebdas\xf6\u0144`, 5) == `\u0144`\n')),(0,i.kt)("h2",l({},{id:"charcodeat"}),"charCodeAt"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let charCodeAt: (t, int) => float\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"charCodeAt(s, n)")," returns the character code at position ",(0,i.kt)("inlineCode",{parentName:"p"},"n")," in string ",(0,i.kt)("inlineCode",{parentName:"p"},"s"),"; the result is in the range 0-65535, unlke ",(0,i.kt)("inlineCode",{parentName:"p"},"codePointAt"),", so it will not work correctly for characters with code points greater than or equal to 0x10000.\nThe return type is ",(0,i.kt)("inlineCode",{parentName:"p"},"float")," because this function returns NaN if ",(0,i.kt)("inlineCode",{parentName:"p"},"n")," is less than zero or greater than the length of the string. See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.charCodeAt"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),"Js.String2.charCodeAt(`\ud83d\ude3a`, 0) == 0xd83d->Belt.Int.toFloat\nJs.String2.codePointAt(`\ud83d\ude3a`, 0) == Some(0x1f63a)\n")),(0,i.kt)("h2",l({},{id:"codepointat"}),"codePointAt"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let codePointAt: (t, int) => option<int>\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"codePointAt(s, n)")," returns the code point at position ",(0,i.kt)("inlineCode",{parentName:"p"},"n")," within string ",(0,i.kt)("inlineCode",{parentName:"p"},"s")," as a ",(0,i.kt)("inlineCode",{parentName:"p"},"Some(value)"),".\nThe return value handles code points greater than or equal to 0x10000.\nIf there is no code point at the given position, the function returns ",(0,i.kt)("inlineCode",{parentName:"p"},"None"),". See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/codePointAt"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.codePointAt"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.codePointAt(`\xbf\ud83d\ude3a?`, 1) == Some(0x1f63a)\nJs.String2.codePointAt("abc", 5) == None\n')),(0,i.kt)("h2",l({},{id:"concat"}),"concat"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let concat: (t, t) => t\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"concat(original, append)")," returns a new ",(0,i.kt)("inlineCode",{parentName:"p"},"string")," with ",(0,i.kt)("inlineCode",{parentName:"p"},"append")," added after ",(0,i.kt)("inlineCode",{parentName:"p"},"original"),". See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/concat"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.concat"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.concat("cow", "bell") == "cowbell"\n')),(0,i.kt)("h2",l({},{id:"concatmany"}),"concatMany"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let concatMany: (t, array<t>) => t\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"concat(original, arr)")," returns a new ",(0,i.kt)("inlineCode",{parentName:"p"},"string")," consisting of each item of an array of strings added to the ",(0,i.kt)("inlineCode",{parentName:"p"},"original")," string. See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/concat"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.concat"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.concatMany("1st", ["2nd", "3rd", "4th"]) == "1st2nd3rd4th"\n')),(0,i.kt)("h2",l({},{id:"endswith"}),"endsWith"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let endsWith: (t, t) => bool\n")),(0,i.kt)("p",null,"ES2015: ",(0,i.kt)("inlineCode",{parentName:"p"},"endsWith(str, substr)")," returns ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," if the ",(0,i.kt)("inlineCode",{parentName:"p"},"str")," ends with ",(0,i.kt)("inlineCode",{parentName:"p"},"substr"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"false")," otherwise. See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.endsWith"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.endsWith("BuckleScript", "Script") == true\nJs.String2.endsWith("BuckleShoes", "Script") == false\n')),(0,i.kt)("h2",l({},{id:"endswithfrom"}),"endsWithFrom"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let endsWithFrom: (t, t, int) => bool\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"endsWithFrom(str, ending, len)")," returns ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," if the first len characters of ",(0,i.kt)("inlineCode",{parentName:"p"},"str")," end with ",(0,i.kt)("inlineCode",{parentName:"p"},"ending"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"false")," otherwise.\nIf ",(0,i.kt)("inlineCode",{parentName:"p"},"len")," is greater than or equal to the length of ",(0,i.kt)("inlineCode",{parentName:"p"},"str"),", then it works like ",(0,i.kt)("inlineCode",{parentName:"p"},"endsWith"),". (Honestly, this should have been named endsWithAt, but oh well.) See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.endsWith"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.endsWithFrom("abcd", "cd", 4) == true\nJs.String2.endsWithFrom("abcde", "cd", 3) == false\nJs.String2.endsWithFrom("abcde", "cde", 99) == true\nJs.String2.endsWithFrom("example.dat", "ple", 7) == true\n')),(0,i.kt)("h2",l({},{id:"includes"}),"includes"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let includes: (t, t) => bool\n")),(0,i.kt)("p",null,"ES2015: ",(0,i.kt)("inlineCode",{parentName:"p"},"includes(str, searchValue)")," returns ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," if ",(0,i.kt)("inlineCode",{parentName:"p"},"searchValue")," is found anywhere within ",(0,i.kt)("inlineCode",{parentName:"p"},"str"),", false otherwise. See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.includes"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.includes("programmer", "gram") == true\nJs.String2.includes("programmer", "er") == true\nJs.String2.includes("programmer", "pro") == true\nJs.String2.includes("programmer.dat", "xyz") == false\n')),(0,i.kt)("h2",l({},{id:"includesfrom"}),"includesFrom"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let includesFrom: (t, t, int) => bool\n")),(0,i.kt)("p",null,"ES2015: ",(0,i.kt)("inlineCode",{parentName:"p"},"includes(str, searchValue start)")," returns ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," if ",(0,i.kt)("inlineCode",{parentName:"p"},"searchValue")," is found anywhere within ",(0,i.kt)("inlineCode",{parentName:"p"},"str")," starting at character number ",(0,i.kt)("inlineCode",{parentName:"p"},"start")," (where 0 is the first character), ",(0,i.kt)("inlineCode",{parentName:"p"},"false")," otherwise. See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.includes"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.includesFrom("programmer", "gram", 1) == true\nJs.String2.includesFrom("programmer", "gram", 4) == false\nJs.String2.includesFrom(`\ub300\ud55c\ubbfc\uad6d`, `\ud55c`, 1) == true\n')),(0,i.kt)("h2",l({},{id:"indexof"}),"indexOf"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let indexOf: (t, t) => int\n")),(0,i.kt)("p",null,"ES2015: ",(0,i.kt)("inlineCode",{parentName:"p"},"indexOf(str, searchValue)")," returns the position at which ",(0,i.kt)("inlineCode",{parentName:"p"},"searchValue")," was first found within ",(0,i.kt)("inlineCode",{parentName:"p"},"str"),", or -1 if ",(0,i.kt)("inlineCode",{parentName:"p"},"searchValue")," is not in ",(0,i.kt)("inlineCode",{parentName:"p"},"str"),". See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.indexOf"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.indexOf("bookseller", "ok") == 2\nJs.String2.indexOf("bookseller", "sell") == 4\nJs.String2.indexOf("beekeeper", "ee") == 1\nJs.String2.indexOf("bookseller", "xyz") == -1\n')),(0,i.kt)("h2",l({},{id:"indexoffrom"}),"indexOfFrom"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let indexOfFrom: (t, t, int) => int\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"indexOfFrom(str, searchValue, start)")," returns the position at which ",(0,i.kt)("inlineCode",{parentName:"p"},"searchValue")," was found within ",(0,i.kt)("inlineCode",{parentName:"p"},"str")," starting at character position ",(0,i.kt)("inlineCode",{parentName:"p"},"start"),", or -1 if ",(0,i.kt)("inlineCode",{parentName:"p"},"searchValue")," is not found in that portion of ",(0,i.kt)("inlineCode",{parentName:"p"},"str"),".\nThe return value is relative to the beginning of the string, no matter where the search started from. See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.indexOf"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.indexOfFrom("bookseller", "ok", 1) == 2\nJs.String2.indexOfFrom("bookseller", "sell", 2) == 4\nJs.String2.indexOfFrom("bookseller", "sell", 5) == -1\n')),(0,i.kt)("h2",l({},{id:"lastindexof"}),"lastIndexOf"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let lastIndexOf: (t, t) => int\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"lastIndexOf(str, searchValue)")," returns the position of the last occurrence of ",(0,i.kt)("inlineCode",{parentName:"p"},"searchValue")," within ",(0,i.kt)("inlineCode",{parentName:"p"},"str"),", searching backwards from the end of the string.\nReturns -1 if ",(0,i.kt)("inlineCode",{parentName:"p"},"searchValue")," is not in ",(0,i.kt)("inlineCode",{parentName:"p"},"str"),". The return value is always relative to the beginning of the string. See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/lastIndexOf"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.lastIndexOf"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.lastIndexOf("bookseller", "ok") == 2\nJs.String2.lastIndexOf("beekeeper", "ee") == 4\nJs.String2.lastIndexOf("abcdefg", "xyz") == -1\n')),(0,i.kt)("h2",l({},{id:"lastindexoffrom"}),"lastIndexOfFrom"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let lastIndexOfFrom: (t, t, int) => int\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"lastIndexOfFrom(str, searchValue, start)")," returns the position of the last occurrence of ",(0,i.kt)("inlineCode",{parentName:"p"},"searchValue")," within ",(0,i.kt)("inlineCode",{parentName:"p"},"str"),", searching backwards from the given start position.\nReturns -1 if ",(0,i.kt)("inlineCode",{parentName:"p"},"searchValue")," is not in ",(0,i.kt)("inlineCode",{parentName:"p"},"str"),". The return value is always relative to the beginning of the string. See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/lastIndexOf"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.lastIndexOf"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.lastIndexOfFrom("bookseller", "ok", 6) == 2\nJs.String2.lastIndexOfFrom("beekeeper", "ee", 8) == 4\nJs.String2.lastIndexOfFrom("beekeeper", "ee", 3) == 1\nJs.String2.lastIndexOfFrom("abcdefg", "xyz", 4) == -1\n')),(0,i.kt)("h2",l({},{id:"localecompare"}),"localeCompare"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let localeCompare: (t, t) => float\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"localeCompare(reference, comparison)")," returns"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"a negative value if reference comes before comparison in sort order"),(0,i.kt)("li",{parentName:"ul"},"zero if reference and comparison have the same sort order"),(0,i.kt)("li",{parentName:"ul"},"a positive value if reference comes after comparison in sort order")),(0,i.kt)("p",null,"See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.localeCompare"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.localeCompare("zebra", "ant") > 0.0\nJs.String2.localeCompare("ant", "zebra") < 0.0\nJs.String2.localeCompare("cat", "cat") == 0.0\nJs.String2.localeCompare("CAT", "cat") > 0.0\n')),(0,i.kt)("h2",l({},{id:"match"}),"match"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let match_: (t, Js_re.t) => option<array<t>>\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"match(str, regexp)")," matches a ",(0,i.kt)("inlineCode",{parentName:"p"},"string")," against the given ",(0,i.kt)("inlineCode",{parentName:"p"},"regexp"),". If there is no match, it returns ",(0,i.kt)("inlineCode",{parentName:"p"},"None"),". For regular expressions without the g modifier, if there is a match, the return value is ",(0,i.kt)("inlineCode",{parentName:"p"},"Some(array)")," where the array contains:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The entire matched string"),(0,i.kt)("li",{parentName:"ul"},"Any capture groups if the regexp had parentheses\nFor regular expressions with the g modifier, a matched expression returns ",(0,i.kt)("inlineCode",{parentName:"li"},"Some(array)")," with all the matched substrings and no capture groups. See ",(0,i.kt)("a",l({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.match"))," on MDN.")),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.match_("The better bats", %re("/b[aeiou]t/")) == Some(["bet"])\nJs.String2.match_("The better bats", %re("/b[aeiou]t/g")) == Some(["bet", "bat"])\nJs.String2.match_("Today is 2018-04-05.", %re("/(\\d+)-(\\d+)-(\\d+)/")) ==\n  Some(["2018-04-05", "2018", "04", "05"])\nJs.String2.match_("The large container.", %re("/b[aeiou]g/")) == None\n')),(0,i.kt)("h2",l({},{id:"normalize"}),"normalize"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let normalize: t => t\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"normalize(str)")," returns the normalized Unicode string using Normalization Form Canonical (NFC) Composition.\nConsider the character \xe3, which can be represented as the single codepoint \\u00e3 or the combination of a lower case letter A \\u0061 and a combining tilde \\u0303.\nNormalization ensures that both can be stored in an equivalent binary representation. See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.normalize"))," on MDN. See also ",(0,i.kt)("a",l({parentName:"p"},{href:"https://unicode.org/reports/tr15/"}),"Unicode technical report #15")," for details."),(0,i.kt)("h2",l({},{id:"normalizebyform"}),"normalizeByForm"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let normalizeByForm: (t, t) => t\n")),(0,i.kt)("p",null,"ES2015: ",(0,i.kt)("inlineCode",{parentName:"p"},"normalize(str, form)")," returns the normalized Unicode string using the specified form of normalization, which may be one of:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'"NFC" \u2014 Normalization Form Canonical Composition.'),(0,i.kt)("li",{parentName:"ul"},'"NFD" \u2014 Normalization Form Canonical Decomposition.'),(0,i.kt)("li",{parentName:"ul"},'"NFKC" \u2014 Normalization Form Compatibility Composition.'),(0,i.kt)("li",{parentName:"ul"},'"NFKD" \u2014 Normalization Form Compatibility Decomposition.')),(0,i.kt)("p",null,"See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.normalize"))," on MDN. See also ",(0,i.kt)("a",l({parentName:"p"},{href:"https://unicode.org/reports/tr15/"}),"Unicode technical report #15")," for details.."),(0,i.kt)("h2",l({},{id:"repeat"}),"repeat"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let repeat: (t, int) => t\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"repeat(str, n)")," returns a ",(0,i.kt)("inlineCode",{parentName:"p"},"string")," that consists of ",(0,i.kt)("inlineCode",{parentName:"p"},"n")," repetitions of ",(0,i.kt)("inlineCode",{parentName:"p"},"str"),". Raises ",(0,i.kt)("inlineCode",{parentName:"p"},"RangeError")," if ",(0,i.kt)("inlineCode",{parentName:"p"},"n")," is negative. See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.repeat"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.repeat("ha", 3) == "hahaha"\nJs.String2.repeat("empty", 0) == ""\n')),(0,i.kt)("h2",l({},{id:"replace"}),"replace"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let replace: (t, t, t) => t\n")),(0,i.kt)("p",null,"ES2015: ",(0,i.kt)("inlineCode",{parentName:"p"},"replace(str, substr, newSubstr)")," returns a new ",(0,i.kt)("inlineCode",{parentName:"p"},"string")," which is identical to ",(0,i.kt)("inlineCode",{parentName:"p"},"str")," except with the first matching instance of ",(0,i.kt)("inlineCode",{parentName:"p"},"substr")," replaced by ",(0,i.kt)("inlineCode",{parentName:"p"},"newSubstr"),".\n",(0,i.kt)("inlineCode",{parentName:"p"},"substr")," is treated as a verbatim string to match, not a regular expression. See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.replace"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.replace("old string", "old", "new") == "new string"\nJs.String2.replace("the cat and the dog", "the", "this") == "this cat and the dog"\n')),(0,i.kt)("h2",l({},{id:"replacebyre"}),"replaceByRe"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let replaceByRe: (t, Js_re.t, t) => t\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"replaceByRe(str, regex, replacement)")," returns a new ",(0,i.kt)("inlineCode",{parentName:"p"},"string")," where occurrences matching regex have been replaced by ",(0,i.kt)("inlineCode",{parentName:"p"},"replacement"),". See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.replace"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.replaceByRe("vowels be gone", %re("/[aeiou]/g"), "x") == "vxwxls bx gxnx"\nJs.String2.replaceByRe("Juan Fulano", %re("/(\\w+) (\\w+)/"), "$2, $1") == "Fulano, Juan"\n')),(0,i.kt)("h2",l({},{id:"unsafereplaceby0"}),"unsafeReplaceBy0"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let unsafeReplaceBy0: (t, Js_re.t, (t, int, t) => t) => t\n")),(0,i.kt)("p",null,"Returns a new ",(0,i.kt)("inlineCode",{parentName:"p"},"string")," with some or all matches of a pattern with no capturing parentheses replaced by the value returned from the given function.\nThe function receives as its parameters the matched string, the offset at which the match begins, and the whole string being matched. See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.replace"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'let str = "beautiful vowels"\nlet re = %re("/[aeiou]/g")\nlet matchFn = (matchPart, _offset, _wholeString) => Js.String2.toUpperCase(matchPart)\n\nJs.String2.unsafeReplaceBy0(str, re, matchFn) == "bEAUtIfUl vOwEls"\n')),(0,i.kt)("h2",l({},{id:"unsafereplaceby1"}),"unsafeReplaceBy1"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let unsafeReplaceBy1: (t, Js_re.t, (t, t, int, t) => t) => t\n")),(0,i.kt)("p",null,"Returns a new ",(0,i.kt)("inlineCode",{parentName:"p"},"string")," with some or all matches of a pattern with one set of capturing parentheses replaced by the value returned from the given function.\nThe function receives as its parameters the matched string, the captured string, the offset at which the match begins, and the whole string being matched. See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.replace"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'let str = "Jony is 40"\nlet re = %re("/(Jony is )\\d+/g")\nlet matchFn = (_match, part1, _offset, _wholeString) => {\n  part1 ++ "41"\n}\n\nJs.String2.unsafeReplaceBy1(str, re, matchFn) == "Jony is 41"\n')),(0,i.kt)("h2",l({},{id:"unsafereplaceby2"}),"unsafeReplaceBy2"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let unsafeReplaceBy2: (t, Js_re.t, (t, t, t, int, t) => t) => t\n")),(0,i.kt)("p",null,"Returns a new ",(0,i.kt)("inlineCode",{parentName:"p"},"string")," with some or all matches of a pattern with two sets of capturing parentheses replaced by the value returned from the given function.\nThe function receives as its parameters the matched string, the captured strings, the offset at which the match begins, and the whole string being matched. See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.replace"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'let str = "7 times 6"\nlet re = %re("/(\\d+) times (\\d+)/")\nlet matchFn = (_match, p1, p2, _offset, _wholeString) => {\n  switch (Belt.Int.fromString(p1), Belt.Int.fromString(p2)) {\n  | (Some(x), Some(y)) => Belt.Int.toString(x * y)\n  | _ => "???"\n  }\n}\n\nJs.String2.unsafeReplaceBy2(str, re, matchFn) == "42"\n')),(0,i.kt)("h2",l({},{id:"unsafereplaceby3"}),"unsafeReplaceBy3"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let unsafeReplaceBy3: (t, Js_re.t, (t, t, t, t, int, t) => t) => t\n")),(0,i.kt)("p",null,"Returns a new ",(0,i.kt)("inlineCode",{parentName:"p"},"string")," with some or all matches of a pattern with three sets of capturing parentheses replaced by the value returned from the given function.\nThe function receives as its parameters the matched string, the captured strings, the offset at which the match begins, and the whole string being matched. See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.replace"))," on MDN."),(0,i.kt)("h2",l({},{id:"search"}),"search"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let search: (t, Js_re.t) => int\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"search(str, regexp)")," returns the starting position of the first match of ",(0,i.kt)("inlineCode",{parentName:"p"},"regexp")," in the given ",(0,i.kt)("inlineCode",{parentName:"p"},"str"),", or -1 if there is no match. See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/search"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.search"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.search("testing 1 2 3", %re("/\\d+/")) == 8\nJs.String2.search("no numbers", %re("/\\d+/")) == -1\n')),(0,i.kt)("h2",l({},{id:"slice"}),"slice"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let slice: (t, ~from: int, ~to_: int) => t\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"slice(str, from:n1, to_:n2)")," returns the substring of ",(0,i.kt)("inlineCode",{parentName:"p"},"str")," starting at character ",(0,i.kt)("inlineCode",{parentName:"p"},"n1")," up to but not including ",(0,i.kt)("inlineCode",{parentName:"p"},"n2"),"."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"If either ",(0,i.kt)("inlineCode",{parentName:"li"},"n1")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"n2")," is negative, then it is evaluated as ",(0,i.kt)("inlineCode",{parentName:"li"},"length(str - n1)")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"length(str - n2)"),"."),(0,i.kt)("li",{parentName:"ul"},"If ",(0,i.kt)("inlineCode",{parentName:"li"},"n2")," is greater than the length of ",(0,i.kt)("inlineCode",{parentName:"li"},"str"),", then it is treated as ",(0,i.kt)("inlineCode",{parentName:"li"},"length(str)"),"."),(0,i.kt)("li",{parentName:"ul"},"If ",(0,i.kt)("inlineCode",{parentName:"li"},"n1")," is greater than ",(0,i.kt)("inlineCode",{parentName:"li"},"n2"),", slice returns the empty string.")),(0,i.kt)("p",null,"See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/slice"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.slice"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.slice("abcdefg", ~from=2, ~to_=5) == "cde"\nJs.String2.slice("abcdefg", ~from=2, ~to_=9) == "cdefg"\nJs.String2.slice("abcdefg", ~from=-4, ~to_=-2) == "de"\nJs.String2.slice("abcdefg", ~from=5, ~to_=1) == ""\n')),(0,i.kt)("h2",l({},{id:"slicetoend"}),"sliceToEnd"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let sliceToEnd: (t, ~from: int) => t\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"sliceToEnd(str, from:n)")," returns the substring of ",(0,i.kt)("inlineCode",{parentName:"p"},"str")," starting at character ",(0,i.kt)("inlineCode",{parentName:"p"},"n")," to the end of the string."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"If ",(0,i.kt)("inlineCode",{parentName:"li"},"n")," is negative, then it is evaluated as ",(0,i.kt)("inlineCode",{parentName:"li"},"length(str - n)"),"."),(0,i.kt)("li",{parentName:"ul"},"If ",(0,i.kt)("inlineCode",{parentName:"li"},"n")," is greater than the length of ",(0,i.kt)("inlineCode",{parentName:"li"},"str"),", then sliceToEnd returns the empty string.")),(0,i.kt)("p",null,"See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/slice"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.slice"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.sliceToEnd("abcdefg", ~from=4) == "efg"\nJs.String2.sliceToEnd("abcdefg", ~from=-2) == "fg"\nJs.String2.sliceToEnd("abcdefg", ~from=7) == ""\n')),(0,i.kt)("h2",l({},{id:"split"}),"split"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let split: (t, t) => array<t>\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"split(str, delimiter)")," splits the given ",(0,i.kt)("inlineCode",{parentName:"p"},"str")," at every occurrence of ",(0,i.kt)("inlineCode",{parentName:"p"},"delimiter")," and returns an array of the resulting substrings. See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.split"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.split("2018-01-02", "-") == ["2018", "01", "02"]\nJs.String2.split("a,b,,c", ",") == ["a", "b", "", "c"]\nJs.String2.split("good::bad as great::awful", "::") == ["good", "bad as great", "awful"]\nJs.String2.split("has-no-delimiter", ";") == ["has-no-delimiter"]\n')),(0,i.kt)("h2",l({},{id:"splitatmost"}),"splitAtMost"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let splitAtMost: (t, t, ~limit: int) => array<t>\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"splitAtMost(str, delimiter, ~limit:n)")," splits the given ",(0,i.kt)("inlineCode",{parentName:"p"},"str")," at every occurrence of ",(0,i.kt)("inlineCode",{parentName:"p"},"delimiter")," and returns an array of the first ",(0,i.kt)("inlineCode",{parentName:"p"},"n")," resulting substrings.\nIf ",(0,i.kt)("inlineCode",{parentName:"p"},"n")," is negative or greater than the number of substrings, the array will contain all the substrings. See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.split"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.splitAtMost("ant/bee/cat/dog/elk", "/", ~limit=3) == ["ant", "bee", "cat"]\nJs.String2.splitAtMost("ant/bee/cat/dog/elk", "/", ~limit=0) == []\nJs.String2.splitAtMost("ant/bee/cat/dog/elk", "/", ~limit=9) == [\n    "ant",\n    "bee",\n    "cat",\n    "dog",\n    "elk",\n  ]\n')),(0,i.kt)("h2",l({},{id:"splitbyre"}),"splitByRe"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let splitByRe: (t, Js_re.t) => array<option<t>>\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"splitByRe(str, regex)")," splits the given ",(0,i.kt)("inlineCode",{parentName:"p"},"str")," at every occurrence of ",(0,i.kt)("inlineCode",{parentName:"p"},"regex")," and returns an array of the resulting substrings. See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.split"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.splitByRe("art; bed , cog ;dad", %re("/\\s*[,;]\\s*/")) == [\n    Some("art"),\n    Some("bed"),\n    Some("cog"),\n    Some("dad"),\n  ]\n')),(0,i.kt)("h2",l({},{id:"splitbyreatmost"}),"splitByReAtMost"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let splitByReAtMost: (t, Js_re.t, ~limit: int) => array<option<t>>\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"splitByReAtMost(str, regex, ~limit:n)")," splits the given ",(0,i.kt)("inlineCode",{parentName:"p"},"str")," at every occurrence of ",(0,i.kt)("inlineCode",{parentName:"p"},"regex")," and returns an array of the first ",(0,i.kt)("inlineCode",{parentName:"p"},"n")," resulting substrings.\nIf ",(0,i.kt)("inlineCode",{parentName:"p"},"n")," is negative or greater than the number of substrings, the array will contain all the substrings. See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.split"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.splitByReAtMost("one: two: three: four", %re("/\\s*:\\s*/"), ~limit=3) == [\n    Some("one"),\n    Some("two"),\n    Some("three"),\n  ]\n\nJs.String2.splitByReAtMost("one: two: three: four", %re("/\\s*:\\s*/"), ~limit=0) == []\n\nJs.String2.splitByReAtMost("one: two: three: four", %re("/\\s*:\\s*/"), ~limit=8) == [\n    Some("one"),\n    Some("two"),\n    Some("three"),\n    Some("four"),\n  ]\n')),(0,i.kt)("h2",l({},{id:"startswith"}),"startsWith"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let startsWith: (t, t) => bool\n")),(0,i.kt)("p",null,"ES2015: ",(0,i.kt)("inlineCode",{parentName:"p"},"startsWith(str, substr)")," returns ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," if the ",(0,i.kt)("inlineCode",{parentName:"p"},"str")," starts with ",(0,i.kt)("inlineCode",{parentName:"p"},"substr"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"false")," otherwise. See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.startsWith"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.startsWith("BuckleScript", "Buckle") == true\nJs.String2.startsWith("BuckleScript", "") == true\nJs.String2.startsWith("JavaScript", "Buckle") == false\n')),(0,i.kt)("h2",l({},{id:"startswithfrom"}),"startsWithFrom"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let startsWithFrom: (t, t, int) => bool\n")),(0,i.kt)("p",null,"ES2015: ",(0,i.kt)("inlineCode",{parentName:"p"},"startsWithFrom(str, substr, n)")," returns ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," if the ",(0,i.kt)("inlineCode",{parentName:"p"},"str")," starts with ",(0,i.kt)("inlineCode",{parentName:"p"},"substr")," starting at position ",(0,i.kt)("inlineCode",{parentName:"p"},"n"),", false otherwise.\nIf ",(0,i.kt)("inlineCode",{parentName:"p"},"n")," is negative, the search starts at the beginning of ",(0,i.kt)("inlineCode",{parentName:"p"},"str"),". See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.startsWith"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.startsWithFrom("BuckleScript", "kle", 3) == true\nJs.String2.startsWithFrom("BuckleScript", "", 3) == true\nJs.String2.startsWithFrom("JavaScript", "Buckle", 2) == false\n')),(0,i.kt)("h2",l({},{id:"substr"}),"substr"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let substr: (t, ~from: int) => t\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"substr(str, ~from:n)")," returns the substring of ",(0,i.kt)("inlineCode",{parentName:"p"},"str")," from position ",(0,i.kt)("inlineCode",{parentName:"p"},"n")," to the end of the string."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"If ",(0,i.kt)("inlineCode",{parentName:"li"},"n")," is less than zero, the starting position is the length of ",(0,i.kt)("inlineCode",{parentName:"li"},"str - n"),"."),(0,i.kt)("li",{parentName:"ul"},"If ",(0,i.kt)("inlineCode",{parentName:"li"},"n")," is greater than or equal to the length of ",(0,i.kt)("inlineCode",{parentName:"li"},"str"),", returns the empty string.")),(0,i.kt)("p",null,"JavaScript\u2019s ",(0,i.kt)("inlineCode",{parentName:"p"},"String.substr()")," is a legacy function. When possible, use ",(0,i.kt)("inlineCode",{parentName:"p"},"substring()")," instead. See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substr"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.substr"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.substr("abcdefghij", ~from=3) == "defghij"\nJs.String2.substr("abcdefghij", ~from=-3) == "hij"\nJs.String2.substr("abcdefghij", ~from=12) == ""\n')),(0,i.kt)("h2",l({},{id:"substratmost"}),"substrAtMost"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let substrAtMost: (t, ~from: int, ~length: int) => t\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"substrAtMost(str, ~from: pos, ~length: n)")," returns the substring of ",(0,i.kt)("inlineCode",{parentName:"p"},"str")," of length ",(0,i.kt)("inlineCode",{parentName:"p"},"n")," starting at position ",(0,i.kt)("inlineCode",{parentName:"p"},"pos"),"."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"If ",(0,i.kt)("inlineCode",{parentName:"li"},"pos")," is less than zero, the starting position is the length of ",(0,i.kt)("inlineCode",{parentName:"li"},"str - pos"),"."),(0,i.kt)("li",{parentName:"ul"},"If ",(0,i.kt)("inlineCode",{parentName:"li"},"pos")," is greater than or equal to the length of ",(0,i.kt)("inlineCode",{parentName:"li"},"str"),", returns the empty string."),(0,i.kt)("li",{parentName:"ul"},"If ",(0,i.kt)("inlineCode",{parentName:"li"},"n")," is less than or equal to zero, returns the empty string.")),(0,i.kt)("p",null,"JavaScript\u2019s ",(0,i.kt)("inlineCode",{parentName:"p"},"String.substr()")," is a legacy function. When possible, use ",(0,i.kt)("inlineCode",{parentName:"p"},"substring()")," instead. See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substr"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.substr"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.substrAtMost("abcdefghij", ~from=3, ~length=4) == "defg"\nJs.String2.substrAtMost("abcdefghij", ~from=-3, ~length=4) == "hij"\nJs.String2.substrAtMost("abcdefghij", ~from=12, ~length=2) == ""\n')),(0,i.kt)("h2",l({},{id:"substring"}),"substring"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let substring: (t, ~from: int, ~to_: int) => t\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"substring(str, ~from: start, ~to_: finish)")," returns characters ",(0,i.kt)("inlineCode",{parentName:"p"},"start")," up to but not including finish from ",(0,i.kt)("inlineCode",{parentName:"p"},"str"),"."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"If ",(0,i.kt)("inlineCode",{parentName:"li"},"start")," is less than zero, it is treated as zero."),(0,i.kt)("li",{parentName:"ul"},"If ",(0,i.kt)("inlineCode",{parentName:"li"},"finish")," is zero or negative, the empty string is returned."),(0,i.kt)("li",{parentName:"ul"},"If ",(0,i.kt)("inlineCode",{parentName:"li"},"start")," is greater than ",(0,i.kt)("inlineCode",{parentName:"li"},"finish"),", the ",(0,i.kt)("inlineCode",{parentName:"li"},"start")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"finish")," points are swapped.")),(0,i.kt)("p",null,"See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substring"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.substring"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.substring("playground", ~from=3, ~to_=6) == "ygr"\nJs.String2.substring("playground", ~from=6, ~to_=3) == "ygr"\nJs.String2.substring("playground", ~from=4, ~to_=12) == "ground"\n')),(0,i.kt)("h2",l({},{id:"substringtoend"}),"substringToEnd"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let substringToEnd: (t, ~from: int) => t\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"substringToEnd(str, ~from: start)")," returns the substring of ",(0,i.kt)("inlineCode",{parentName:"p"},"str")," from position ",(0,i.kt)("inlineCode",{parentName:"p"},"start")," to the end."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"If ",(0,i.kt)("inlineCode",{parentName:"li"},"start")," is less than or equal to zero, the entire string is returned."),(0,i.kt)("li",{parentName:"ul"},"If ",(0,i.kt)("inlineCode",{parentName:"li"},"start")," is greater than or equal to the length of ",(0,i.kt)("inlineCode",{parentName:"li"},"str"),", the empty string is returned.")),(0,i.kt)("p",null,"See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substring"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.substring"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.substringToEnd("playground", ~from=4) == "ground"\nJs.String2.substringToEnd("playground", ~from=-3) == "playground"\nJs.String2.substringToEnd("playground", ~from=12) == ""\n')),(0,i.kt)("h2",l({},{id:"tolowercase"}),"toLowerCase"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let toLowerCase: t => t\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"toLowerCase(str)")," converts ",(0,i.kt)("inlineCode",{parentName:"p"},"str")," to lower case using the locale-insensitive case mappings in the Unicode Character Database.\nNotice that the conversion can give different results depending upon context, for example with the Greek letter sigma, which has two different lower case forms; one when it is the last character in a string and another when it is not. See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toLowerCase"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.toLowerCase"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.toLowerCase("ABC") == "abc"\nJs.String2.toLowerCase(`\u03a3\u03a0`) == `\u03c3\u03c0`\nJs.String2.toLowerCase(`\u03a0\u03a3`) == `\u03c0\u03c2`\n')),(0,i.kt)("h2",l({},{id:"tolocalelowercase"}),"toLocaleLowerCase"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let toLocaleLowerCase: t => t\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"toLocaleLowerCase(str)")," converts ",(0,i.kt)("inlineCode",{parentName:"p"},"str")," to lower case using the current locale. See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toLocaleLowerCase"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.toLocaleLowerCase"))," on MDN."),(0,i.kt)("h2",l({},{id:"touppercase"}),"toUpperCase"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let toUpperCase: t => t\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"toUpperCase(str)")," converts ",(0,i.kt)("inlineCode",{parentName:"p"},"str")," to upper case using the locale-insensitive case mappings in the Unicode Character Database.\nNotice that the conversion can expand the number of letters in the result; for example the German \xdf capitalizes to two Ses in a row. See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toUpperCase"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.toUpperCase"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.toUpperCase("abc") == "ABC"\nJs.String2.toUpperCase(`Stra\xdfe`) == `STRASSE`\nJs.String2.toUpperCase(`\u03c0\u03c2`) == `\u03a0\u03a3`\n')),(0,i.kt)("h2",l({},{id:"tolocaleuppercase"}),"toLocaleUpperCase"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let toLocaleUpperCase: t => t\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"toLocaleUpperCase(str)")," converts ",(0,i.kt)("inlineCode",{parentName:"p"},"str")," to upper case using the current locale. See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toLocaleUpperCase"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.to:LocaleUpperCase"))," on MDN."),(0,i.kt)("h2",l({},{id:"trim"}),"trim"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let trim: t => t\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"trim(str)")," returns a string that is ",(0,i.kt)("inlineCode",{parentName:"p"},"str")," with whitespace stripped from both ends. Internal whitespace is not removed. See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/trim"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.trim"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.trim("   abc def   ") == "abc def"\nJs.String2.trim("\\n\\r\\t abc def \\n\\n\\t\\r ") == "abc def"\n')),(0,i.kt)("h2",l({},{id:"anchor"}),"anchor"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let anchor: (t, t) => t\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"anchor(anchorText, anchorName)")," creates a string with an HTML ",(0,i.kt)("inlineCode",{parentName:"p"},"<a>")," element with name attribute of ",(0,i.kt)("inlineCode",{parentName:"p"},"anchorName")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"anchorText")," as its content. Please do not use this method, as it has been removed from the relevant web standards. See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/anchor"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.anchor"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.anchor("Page One", "page1") == "<a name=\\"page1\\">Page One</a>"\n')),(0,i.kt)("h2",l({},{id:"link"}),"link"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let link: (t, t) => t\n")),(0,i.kt)("p",null,"ES2015: ",(0,i.kt)("inlineCode",{parentName:"p"},"link(linkText, urlText)")," creates a string with an HTML ",(0,i.kt)("inlineCode",{parentName:"p"},"<a>")," element with href attribute of ",(0,i.kt)("inlineCode",{parentName:"p"},"urlText")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"linkText")," as its content. Please do not use this method, as it has been removed from the relevant web standards. See ",(0,i.kt)("a",l({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/link"}),(0,i.kt)("inlineCode",{parentName:"a"},"String.link"))," on MDN."),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.String2.link("Go to page two", "page2.html") == "<a href=\\"page2.html\\">Go to page two</a>"\n')),(0,i.kt)("h2",l({},{id:"casttoarraylike"}),"castToArrayLike"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let castToArrayLike: t => Js_array2.array_like<t>\n")),(0,i.kt)("p",null,"Casts its argument to an ",(0,i.kt)("inlineCode",{parentName:"p"},"array_like")," entity that can be processed by functions such as ",(0,i.kt)("inlineCode",{parentName:"p"},"Js.Array2.fromMap()")),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'let s = "abcde"\nlet arr = Js.Array2.fromMap(Js.String2.castToArrayLike(s), x => x)\narr == ["a", "b", "c", "d", "e"]\n')))}g.isMDXComponent=!0,g.frontmatter={__ghEditHref:"https://github.com/reason-association/rescript-lang.org/blob/master/pages/docs/manual/v9.0.0/api/js/string-2.mdx"}},43075:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/manual/v9.0.0/api/js/string-2",function(){return n(86133)}])}},function(e){e.O(0,[92888,49774,40179],(function(){return t=43075,e(e.s=t);var t}));var t=e.O();_N_E=t}]);