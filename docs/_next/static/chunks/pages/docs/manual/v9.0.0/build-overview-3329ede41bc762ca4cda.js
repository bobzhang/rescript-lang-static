(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[83479],{17375:function(e,t,n){"use strict";function r(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}n.d(t,{Z:function(){return r}})},83458:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return p}});var r=n(96156),i=n(17375),o=(n(67294),n(3905));function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){(0,r.Z)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var s={};function p(e){var t=e.components,n=(0,i.Z)(e,["components"]);return(0,o.kt)("wrapper",l(l(l({},s),n),{},{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",l({},{id:"build-system-overview"}),"Build System Overview"),(0,o.kt)("p",null,"ReScript comes with a build system, bsb, that's meant to be fast, lean and used as the authoritative build system of the community."),(0,o.kt)("p",null,"The build description file is called ",(0,o.kt)("inlineCode",{parentName:"p"},"bsconfig.json"),". Every ReScript project needs one."),(0,o.kt)("h2",l({},{id:"build-project"}),"Build Project"),(0,o.kt)("p",null,"Each build will create build artifacts from your project's source files."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"To build a project (including its dependencies / pinned-dependencies)"),", run:"),(0,o.kt)("pre",null,(0,o.kt)("code",l({parentName:"pre"},{className:"language-sh"}),"bsb -make-world\n")),(0,o.kt)("p",null,"Add ",(0,o.kt)("inlineCode",{parentName:"p"},"-w")," to keep the built-in watcher running. Any new file change will be picked up and the build will re-run."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Note"),": third-party libraries (in ",(0,o.kt)("inlineCode",{parentName:"p"},"node_modules"),", or via ",(0,o.kt)("inlineCode",{parentName:"p"},"pinned-dependencies"),") aren't watched, as doing so may exceed the node.js watcher count limit."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Note 2"),": In case you want to set up a project in a JS-monorepo-esque approach (",(0,o.kt)("inlineCode",{parentName:"p"},"yarn workspaces")," / ",(0,o.kt)("inlineCode",{parentName:"p"},"lerna"),") where changes in your sub packages should be noticed by the compiler (",(0,o.kt)("inlineCode",{parentName:"p"},"bsb -make-world"),"), you will need to define pinned dependencies in your main project's ",(0,o.kt)("inlineCode",{parentName:"p"},"bsconfig.json"),". More details ",(0,o.kt)("a",l({parentName:"p"},{href:"./build-pinned-dependencies"}),"here"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"To build only your project's files (without dependencies)"),", run:"),(0,o.kt)("pre",null,(0,o.kt)("code",l({parentName:"pre"},{className:"language-sh"}),"bsb\n")),(0,o.kt)("h2",l({},{id:"clean-project"}),"Clean Project"),(0,o.kt)("p",null,"If you ever get into a stale build for edge-case reasons, use:"),(0,o.kt)("pre",null,(0,o.kt)("code",l({parentName:"pre"},{className:"language-sh"}),"bsb -clean-world\n")),(0,o.kt)("p",null,"This will clean all your project's build artifacts, including those in your dependencies. Alternatively you can run ",(0,o.kt)("inlineCode",{parentName:"p"},"bsb -clean")," to clean your project's build artifacts only."),(0,o.kt)("p",null,"For more infos, run ",(0,o.kt)("inlineCode",{parentName:"p"},"bsb -help")," to see all the available options."))}p.isMDXComponent=!0,p.frontmatter={title:"Overview",metaTitle:"Build System Overview",description:"Documentation about the ReScript build system and its toolchain",canonical:"/docs/manual/latest/build-overview",__ghEditHref:"https://github.com/reason-association/rescript-lang.org/blob/master/pages/docs/manual/v9.0.0/build-overview.mdx"}},75416:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/manual/v9.0.0/build-overview",function(){return n(83458)}])}},function(e){e.O(0,[92888,49774,40179],(function(){return t=75416,e(e.s=t);var t}));var t=e.O();_N_E=t}]);