(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[84196],{17375:function(e,t,n){"use strict";function a(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}n.d(t,{Z:function(){return a}})},61427:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return c}});var a=n(17375),r=n(96156),o=(n(67294),n(3905));function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){(0,r.Z)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var s,p=(s="CodeTab",function(e){return console.warn("Component "+s+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",l({},e))}),u={};function c(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",l(l(l({},u),n),{},{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",l({},{id:"attribute-decorator"}),"Attribute (Decorator)"),(0,o.kt)("p",null,"Like many other languages, ReScript allows annotating a piece of code to express extra functionality. Here's an example:"),(0,o.kt)(p,{labels:["ReScript","JS Output"],mdxType:"CodeTab"},(0,o.kt)("pre",null,(0,o.kt)("code",l({parentName:"pre"},{className:"language-res"}),'@inline\nlet mode = "dev"\n\nlet mode2 = mode\n')),(0,o.kt)("pre",null,(0,o.kt)("code",l({parentName:"pre"},{className:"language-js"}),'var mode2 = "dev";\n'))),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"@inline")," annotation tells ",(0,o.kt)("inlineCode",{parentName:"p"},"mode"),'\'s value to be inlined into its usage sites (see output). We call such annotation "attribute" (or "decorator" in JavaScript).'),(0,o.kt)("p",null,"An attribute starts with ",(0,o.kt)("inlineCode",{parentName:"p"},"@")," and goes before the item it annotates. In the above example, it's hooked onto the let binding."),(0,o.kt)("h2",l({},{id:"usage"}),"Usage"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Note:")," In previous versions (< 8.3) all our interop related attributes started with a ",(0,o.kt)("inlineCode",{parentName:"p"},"bs.")," prefix (",(0,o.kt)("inlineCode",{parentName:"p"},"bs.module"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"bs.val"),"). Our formatter will automatically drop them in newer ReScript versions.")),(0,o.kt)("p",null,"You can put an attribute almost anywhere. You can even add extra data to them by using them visually like a function call. Here are a few famous attributes (explained in other sections):"),(0,o.kt)(p,{labels:["ReScript","JS Output"],mdxType:"CodeTab"},(0,o.kt)("pre",null,(0,o.kt)("code",l({parentName:"pre"},{className:"language-res"}),'@@warning("-27")\n\n\n@unboxed\ntype a = Name(string)\n\n@val external message: string = "message"\n\ntype student = {\n  age: int,\n  @as("aria-label") ariaLabel: string,\n}\n\n@deprecated\nlet customDouble = foo => foo * 2\n\n@deprecated("Use SomeOther.customTriple instead")\nlet customTriple = foo => foo * 3 \n')),(0,o.kt)("pre",null,(0,o.kt)("code",l({parentName:"pre"},{className:"language-js"}),""))),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},'@@warning("-27")')," is a standalone attribute that annotates the entire file. Those attributes start with ",(0,o.kt)("inlineCode",{parentName:"li"},"@@"),". Here, it carries the data ",(0,o.kt)("inlineCode",{parentName:"li"},'"-27"'),"."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"@unboxed")," annotates the type definition."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"@val")," annotates the ",(0,o.kt)("inlineCode",{parentName:"li"},"external")," statement."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},'@as("aria-label")')," annotates the ",(0,o.kt)("inlineCode",{parentName:"li"},"ariaLabel")," record field."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"@deprecated")," annotates the ",(0,o.kt)("inlineCode",{parentName:"li"},"customDouble")," expression. This shows a warning while compiling telling consumers to not rely on this method long-term."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},'@deprecated("Use SomeOther.customTriple instead")')," annotates the ",(0,o.kt)("inlineCode",{parentName:"li"},"customTriple")," expression with a string to describe the reason for deprecation.")),(0,o.kt)("h2",l({},{id:"extension-point"}),"Extension Point"),(0,o.kt)("p",null,'There\'s a second category of attributes, called "extension points" (a remnant term of our early systems):'),(0,o.kt)(p,{labels:["ReScript","JS Output"],mdxType:"CodeTab"},(0,o.kt)("pre",null,(0,o.kt)("code",l({parentName:"pre"},{className:"language-res"}),'%raw("var a = 1")\n')),(0,o.kt)("pre",null,(0,o.kt)("code",l({parentName:"pre"},{className:"language-js"}),"var a = 1\n"))),(0,o.kt)("p",null,"Extension points are attributes that don't ",(0,o.kt)("em",{parentName:"p"},"annotate")," an item; they ",(0,o.kt)("em",{parentName:"p"},"are")," the item. Usually they serve as placeholders for the compiler to implicitly substitute them with another item."),(0,o.kt)("p",null,"Extension points start with ",(0,o.kt)("inlineCode",{parentName:"p"},"%"),". A standalone extension point (akin to a standalone regular attribute) starts with ",(0,o.kt)("inlineCode",{parentName:"p"},"%%"),"."))}c.isMDXComponent=!0,c.frontmatter={title:"Attribute (Decorator)",description:"Annotations in ReScript",canonical:"/docs/manual/latest/attribute",__ghEditHref:"https://github.com/reason-association/rescript-lang.org/blob/master/pages/docs/manual/v9.0.0/attribute.mdx"}},68319:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/manual/v9.0.0/attribute",function(){return n(61427)}])}},function(e){e.O(0,[92888,49774,40179],(function(){return t=68319,e(e.s=t);var t}));var t=e.O();_N_E=t}]);