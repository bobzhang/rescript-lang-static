(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[64397],{17375:function(e,t,r){"use strict";function a(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}r.d(t,{Z:function(){return a}})},21653:function(e,t,r){"use strict";r.r(t),r.d(t,{default:function(){return p}});var a=r(96156),n=r(17375),i=(r(67294),r(3905));function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){(0,a.Z)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var o={};function p(e){var t=e.components,r=(0,n.Z)(e,["components"]);return(0,i.kt)("wrapper",s(s(s({},o),r),{},{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",s({},{id:"sortarray"}),"SortArray"),(0,i.kt)("h2",s({},{id:"sortarrayint"}),"SortArrayInt"),(0,i.kt)("pre",null,(0,i.kt)("code",s({parentName:"pre"},{className:"language-re",metastring:"sig",sig:!0}),"module Int : Belt_SortArrayInt\n")),(0,i.kt)("p",null,"Specalized when key type is ",(0,i.kt)("inlineCode",{parentName:"p"},"int"),", more efficient than the generic type"),(0,i.kt)("h2",s({},{id:"sortarraystring"}),"SortArrayString"),(0,i.kt)("pre",null,(0,i.kt)("code",s({parentName:"pre"},{className:"language-re",metastring:"sig",sig:!0}),"module String: Belt_SortArrayString\n")),(0,i.kt)("p",null,"Specalized when key type is ",(0,i.kt)("inlineCode",{parentName:"p"},"string"),", more efficient than the generic type"),(0,i.kt)("h2",s({},{id:"strictlysortedlengthu"}),"strictlySortedLengthU"),(0,i.kt)("pre",null,(0,i.kt)("code",s({parentName:"pre"},{className:"language-re",metastring:"sig",sig:!0}),"let strictlySortedLengthU: (array('a), [@bs] (('a, 'a) => bool)) => int;\n")),(0,i.kt)("h2",s({},{id:"strictlysortedlength"}),"strictlySortedLength"),(0,i.kt)("pre",null,(0,i.kt)("code",s({parentName:"pre"},{className:"language-re",metastring:"sig",sig:!0}),"let strictlySortedLength: (array('a), ('a, 'a) => bool) => int;\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"strictlySortedLenght(xs, cmp);")," return ",(0,i.kt)("inlineCode",{parentName:"p"},"+n")," means increasing order ",(0,i.kt)("inlineCode",{parentName:"p"},"-n")," means negative order"),(0,i.kt)("pre",null,(0,i.kt)("code",s({parentName:"pre"},{className:"language-re",metastring:"example",example:!0}),"Belt.SortArray.strictlySortedLength([|1, 2, 3, 4, 3|], (x, y) => x < y) == 4;\n\nBelt.SortArray.strictlySortedLength([||], (x, y) => x < y) == 0;\n\nBelt.SortArray.strictlySortedLength([|1|], (x, y) => x < y) == 1;\n\nBelt.SortArray.strictlySortedLength([|4, 3, 2, 1|], (x, y) => x < y) == (-4);\n")),(0,i.kt)("h2",s({},{id:"issortedu"}),"isSortedU"),(0,i.kt)("pre",null,(0,i.kt)("code",s({parentName:"pre"},{className:"language-re",metastring:"sig",sig:!0}),"let isSortedU: (array('a), [@bs] (('a, 'a) => int)) => bool;\n")),(0,i.kt)("h2",s({},{id:"issorted"}),"isSorted"),(0,i.kt)("pre",null,(0,i.kt)("code",s({parentName:"pre"},{className:"language-re",metastring:"sig",sig:!0}),"let isSorted: (array('a), ('a, 'a) => int) => bool;\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"isSorted(arr, cmp)"),": Returns true if array is increasingly sorted (equal is okay)"),(0,i.kt)("h2",s({},{id:"stablesortinplacebyu"}),"stableSortInPlaceByU"),(0,i.kt)("pre",null,(0,i.kt)("code",s({parentName:"pre"},{className:"language-re",metastring:"sig",sig:!0}),"let stableSortInPlaceByU: (array('a), [@bs] (('a, 'a) => int)) => unit;\n")),(0,i.kt)("h2",s({},{id:"stablesortinplaceby"}),"stableSortInPlaceBy"),(0,i.kt)("pre",null,(0,i.kt)("code",s({parentName:"pre"},{className:"language-re",metastring:"sig",sig:!0}),"let stableSortInPlaceBy: (array('a), ('a, 'a) => int) => unit;\n")),(0,i.kt)("h2",s({},{id:"stablesortbyu"}),"stableSortByU"),(0,i.kt)("pre",null,(0,i.kt)("code",s({parentName:"pre"},{className:"language-re",metastring:"sig",sig:!0}),"let stableSortByU: (array('a), [@bs] (('a, 'a) => int)) => array('a);\n")),(0,i.kt)("h2",s({},{id:"stablesortby"}),"stableSortBy"),(0,i.kt)("pre",null,(0,i.kt)("code",s({parentName:"pre"},{className:"language-re",metastring:"sig",sig:!0}),"let stableSortBy: (array('a), ('a, 'a) => int) => array('a);\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"stableSortBy(xs, cmp)"),": Returns a fresh array Sort ",(0,i.kt)("inlineCode",{parentName:"p"},"xs")," in place using\ncomparator ",(0,i.kt)("inlineCode",{parentName:"p"},"cmp"),", the stable means if the elements are equal, their order will\nbe preserved"),(0,i.kt)("h2",s({},{id:"binarysearchbyu"}),"binarySearchByU"),(0,i.kt)("pre",null,(0,i.kt)("code",s({parentName:"pre"},{className:"language-re",metastring:"sig",sig:!0}),"let binarySearchByU: (array('a), 'a, [@bs] (('a, 'a) => int)) => int;\n")),(0,i.kt)("h2",s({},{id:"binarysearchby"}),"binarySearchBy"),(0,i.kt)("pre",null,(0,i.kt)("code",s({parentName:"pre"},{className:"language-re",metastring:"sig",sig:!0}),"let binarySearchBy: (array('a), 'a, ('a, 'a) => int) => int;\n")),(0,i.kt)("p",null,"If value is not found and value is less than one or more elements in array, the\nnegative number returned is the bitwise complement of the index of the first\nelement that is larger than value."),(0,i.kt)("p",null,"If value is not found and value is greater\nthan all elements in array, the negative number returned is the bitwise\ncomplement of (the index of the last element plus 1)for example, if ",(0,i.kt)("inlineCode",{parentName:"p"},"key")," is\nsmaller than all elements return ",(0,i.kt)("inlineCode",{parentName:"p"},"-1")," since ",(0,i.kt)("inlineCode",{parentName:"p"},"lnot(-1) == 0")," if ",(0,i.kt)("inlineCode",{parentName:"p"},"key")," is larger\nthan all elements return ",(0,i.kt)("inlineCode",{parentName:"p"},"lnot(-1) == 0")," since ",(0,i.kt)("inlineCode",{parentName:"p"},"lnot(- (len + 1)) == len")),(0,i.kt)("pre",null,(0,i.kt)("code",s({parentName:"pre"},{className:"language-re",metastring:"example",example:!0}),"Belt.SortArray.binarySearchBy([|1, 2, 3, 4, 33, 35, 36|], 33, Pervasives.compare) == 4;\n\nlnot(Belt.SortArray.binarySearchBy([|1, 3, 5, 7|], 4, Pervasives.compare)) == 2;\n")))}p.isMDXComponent=!0,p.frontmatter={__ghEditHref:"https://github.com/reason-association/rescript-lang.org/blob/master/pages/docs/manual/v8.0.0/api/belt/sort-array.mdx"}},16273:function(e,t,r){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/manual/v8.0.0/api/belt/sort-array",function(){return r(21653)}])}},function(e){e.O(0,[92888,49774,40179],(function(){return t=16273,e(e.s=t);var t}));var t=e.O();_N_E=t}]);