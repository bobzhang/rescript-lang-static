(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[38413],{17375:function(t,e,n){"use strict";function r(t,e){if(null==t)return{};var n,r,p=function(t,e){if(null==t)return{};var n,r,p={},a=Object.keys(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||(p[n]=t[n]);return p}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(p[n]=t[n])}return p}n.d(e,{Z:function(){return r}})},84581:function(t,e,n){"use strict";n.r(e),n.d(e,{default:function(){return d}});var r=n(17375),p=n(96156),a=(n(67294),n(3905));function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){(0,p.Z)(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}var l,c=(l="Intro",function(t){return console.warn("Component "+l+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",i({},t))}),u={};function d(t){var e=t.components,n=(0,r.Z)(t,["components"]);return(0,a.kt)("wrapper",i(i(i({},u),n),{},{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",i({},{id:"mutablestack"}),"MutableStack"),(0,a.kt)(c,{mdxType:"Intro"},(0,a.kt)("p",null,"First in last out stack. This module implements stacks, with in-place modification.")),(0,a.kt)("h2",i({},{id:"t"}),"t"),(0,a.kt)("pre",null,(0,a.kt)("code",i({parentName:"pre"},{}),"type t('a);\n")),(0,a.kt)("h2",i({},{id:"make"}),"make"),(0,a.kt)("pre",null,(0,a.kt)("code",i({parentName:"pre"},{}),"let make: unit => t('a);\n")),(0,a.kt)("p",null,"Returns a new stack, initially empty."),(0,a.kt)("h2",i({},{id:"clear"}),"clear"),(0,a.kt)("pre",null,(0,a.kt)("code",i({parentName:"pre"},{}),"let clear: t('a) => unit;\n")),(0,a.kt)("p",null,"Discard all elements from the stack."),(0,a.kt)("h2",i({},{id:"copy"}),"copy"),(0,a.kt)("pre",null,(0,a.kt)("code",i({parentName:"pre"},{}),"let copy: t('a) => t('a);\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"copy(x)")," O(1) operation, return a new stack."),(0,a.kt)("h2",i({},{id:"push"}),"push"),(0,a.kt)("pre",null,(0,a.kt)("code",i({parentName:"pre"},{}),"let push: (t('a), 'a) => unit;\n")),(0,a.kt)("h2",i({},{id:"popundefined"}),"popUndefined"),(0,a.kt)("pre",null,(0,a.kt)("code",i({parentName:"pre"},{}),"let popUndefined: t('a) => Js.undefined('a);\n")),(0,a.kt)("h2",i({},{id:"pop"}),"pop"),(0,a.kt)("pre",null,(0,a.kt)("code",i({parentName:"pre"},{}),"let pop: t('a) => option('a);\n")),(0,a.kt)("h2",i({},{id:"topundefined"}),"topUndefined"),(0,a.kt)("pre",null,(0,a.kt)("code",i({parentName:"pre"},{}),"let topUndefined: t('a) => Js.undefined('a);\n")),(0,a.kt)("h2",i({},{id:"top"}),"top"),(0,a.kt)("pre",null,(0,a.kt)("code",i({parentName:"pre"},{}),"let top: t('a) => option('a);\n")),(0,a.kt)("h2",i({},{id:"isempty"}),"isEmpty"),(0,a.kt)("pre",null,(0,a.kt)("code",i({parentName:"pre"},{}),"let isEmpty: t('a) => bool;\n")),(0,a.kt)("h2",i({},{id:"size"}),"size"),(0,a.kt)("pre",null,(0,a.kt)("code",i({parentName:"pre"},{}),"let size: t('a) => int;\n")),(0,a.kt)("h2",i({},{id:"foreachu"}),"forEachU"),(0,a.kt)("pre",null,(0,a.kt)("code",i({parentName:"pre"},{}),"let forEachU: (t('a), [@bs] ('a => unit)) => unit;\n")),(0,a.kt)("h2",i({},{id:"foreach"}),"forEach"),(0,a.kt)("pre",null,(0,a.kt)("code",i({parentName:"pre"},{}),"let forEach: (t('a), 'a => unit) => unit;\n")),(0,a.kt)("h2",i({},{id:"dynamicpopiteru"}),"dynamicPopIterU"),(0,a.kt)("pre",null,(0,a.kt)("code",i({parentName:"pre"},{}),"let dynamicPopIterU: (t('a), [@bs] ('a => unit)) => unit;\n")),(0,a.kt)("h2",i({},{id:"dynamicpopiter"}),"dynamicPopIter"),(0,a.kt)("pre",null,(0,a.kt)("code",i({parentName:"pre"},{}),"let dynamicPopIter: (t('a), 'a => unit) => unit;\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"dynamicPopIter(s, f)")," apply ",(0,a.kt)("inlineCode",{parentName:"p"},"f")," to each element of ",(0,a.kt)("inlineCode",{parentName:"p"},"s"),". The item is poped before applying ",(0,a.kt)("inlineCode",{parentName:"p"},"f"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"s")," will be empty after this opeartion. This function is useful for worklist algorithm."))}d.isMDXComponent=!0,d.frontmatter={__ghEditHref:"https://github.com/reason-association/rescript-lang.org/blob/master/pages/docs/manual/v8.0.0/api/belt/mutable-stack.mdx"}},26903:function(t,e,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/manual/v8.0.0/api/belt/mutable-stack",function(){return n(84581)}])}},function(t){t.O(0,[92888,49774,40179],(function(){return e=26903,t(t.s=e);var e}));var e=t.O();_N_E=e}]);