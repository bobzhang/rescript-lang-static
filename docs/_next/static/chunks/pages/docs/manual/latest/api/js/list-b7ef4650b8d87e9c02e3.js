(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[87059],{17375:function(t,e,a){"use strict";function r(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},i=Object.keys(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}a.d(e,{Z:function(){return r}})},49491:function(t,e,a){"use strict";a.r(e),a.d(e,{default:function(){return c}});var r=a(17375),n=a(96156),i=(a(67294),a(3905));function s(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function l(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?s(Object(a),!0).forEach((function(e){(0,n.Z)(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}var o,p=(o="Intro",function(t){return console.warn("Component "+o+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",l({},t))}),g={};function c(t){var e=t.components,a=(0,r.Z)(t,["components"]);return(0,i.kt)("wrapper",l(l(l({},g),a),{},{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",l({},{id:"list"}),"List"),(0,i.kt)(p,{mdxType:"Intro"},(0,i.kt)("p",null,"Provide utilities for list.")),(0,i.kt)("h2",l({},{id:"t"}),"t"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"prelude",prelude:!0}),"type t<'a> = list<'a>\n")),(0,i.kt)("h2",l({},{id:"length"}),"length"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let length: t<'a> => int\n")),(0,i.kt)("h2",l({},{id:"cons"}),"cons"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let cons: ('a, t<'a>) => t<'a>\n")),(0,i.kt)("h2",l({},{id:"isempty"}),"isEmpty"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let isEmpty: t<'a> => bool\n")),(0,i.kt)("h2",l({},{id:"hd"}),"hd"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let hd: t<'a> => option<'a>\n")),(0,i.kt)("h2",l({},{id:"tl"}),"tl"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let tl: t<'a> => option<t<'a>>\n")),(0,i.kt)("h2",l({},{id:"nth"}),"nth"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let nth: (t<'a>, int) => option<'a>\n")),(0,i.kt)("h2",l({},{id:"revappend"}),"revAppend"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let revAppend: (t<'a>, t<'a>) => t<'a>\n")),(0,i.kt)("h2",l({},{id:"rev"}),"rev"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let rev: t<'a> => t<'a>\n")),(0,i.kt)("h2",l({},{id:"maprev"}),"mapRev"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let mapRev: ((. 'a) => 'b, t<'a>) => t<'b>\n")),(0,i.kt)("h2",l({},{id:"map"}),"map"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let map: ((. 'a) => 'b, t<'a>) => t<'b>\n")),(0,i.kt)("h2",l({},{id:"iter"}),"iter"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let iter: ((. 'a) => unit, t<'a>) => unit\n")),(0,i.kt)("h2",l({},{id:"iteri"}),"iteri"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let iteri: ((. int, 'a) => unit, t<'a>) => unit\n")),(0,i.kt)("h2",l({},{id:"foldleft"}),"foldLeft"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let foldLeft: ((. 'a, 'b) => 'a, 'a, list<'b>) => 'a\n")),(0,i.kt)("p",null,"Application order is left to right, tail-recurisve."),(0,i.kt)("h2",l({},{id:"foldright"}),"foldRight"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let foldRight: ((. 'a, 'b) => 'b, list<'a>, 'b) => 'b\n")),(0,i.kt)("p",null,"Application order is right to left, tail-recursive."),(0,i.kt)("h2",l({},{id:"flatten"}),"flatten"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let flatten: t<t<'a>> => t<'a>\n")),(0,i.kt)("h2",l({},{id:"filter"}),"filter"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let filter: ((. 'a) => bool, t<'a>) => t<'a>\n")),(0,i.kt)("h2",l({},{id:"filtermap"}),"filterMap"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let filterMap: ((. 'a) => option<'b>, t<'a>) => t<'b>\n")),(0,i.kt)("h2",l({},{id:"countby"}),"countBy"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let countBy: ((. 'a) => bool, list<'a>) => int\n")),(0,i.kt)("h2",l({},{id:"init"}),"init"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let init: (int, (. int) => 'a) => t<'a>\n")),(0,i.kt)("h2",l({},{id:"tovector"}),"toVector"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let toVector: t<'a> => Js_vector.t<'a>\n")),(0,i.kt)("h2",l({},{id:"equal"}),"equal"),(0,i.kt)("pre",null,(0,i.kt)("code",l({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let equal: ((. 'a, 'a) => bool, list<'a>, list<'a>) => bool\n")))}c.isMDXComponent=!0,c.frontmatter={__ghEditHref:"https://github.com/reason-association/rescript-lang.org/blob/master/pages/docs/manual/latest/api/js/list.mdx"}},47061:function(t,e,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/manual/latest/api/js/list",function(){return a(49491)}])}},function(t){t.O(0,[92888,49774,40179],(function(){return e=47061,t(t.s=e);var e}));var e=t.O();_N_E=e}]);