(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[77460],{17375:function(e,t,n){"use strict";function a(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}n.d(t,{Z:function(){return a}})},80933:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return m}});var a=n(17375),l=n(96156),o=(n(67294),n(3905));function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){(0,l.Z)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var p,s=(p="CodeTab",function(e){return console.warn("Component "+p+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",i({},e))}),u={};function m(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",i(i(i({},u),n),{},{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",i({},{id:"bind-to-global-js-values"}),"Bind to Global JS Values"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"First"),", make sure the value you'd like to model doesn't already exist in our ",(0,o.kt)("a",i({parentName:"p"},{href:"api/js"}),"provided API"),"."),(0,o.kt)("p",null,"Some JS values, like ",(0,o.kt)("inlineCode",{parentName:"p"},"setTimeout"),", live in the global scope. You can bind to them like so:"),(0,o.kt)(s,{labels:["ReScript","JS Output"],mdxType:"CodeTab"},(0,o.kt)("pre",null,(0,o.kt)("code",i({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'@val external setTimeout: (unit => unit, int) => float = "setTimeout"\n@val external clearTimeout: float => unit = "clearTimeout"\n')),(0,o.kt)("pre",null,(0,o.kt)("code",i({parentName:"pre"},{className:"language-js"}),"// Empty output\n"))),(0,o.kt)("p",null,"(We already provide ",(0,o.kt)("inlineCode",{parentName:"p"},"setTimeout"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"clearTimeout")," and others in the ",(0,o.kt)("a",i({parentName:"p"},{href:"api/js/global"}),"Js.Global")," module)."),(0,o.kt)("p",null,"This binds to the JavaScript ",(0,o.kt)("a",i({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/WindowOrworkerGlobalScope/setTimeout"}),(0,o.kt)("inlineCode",{parentName:"a"},"setTimeout"))," methods and the corresponding ",(0,o.kt)("inlineCode",{parentName:"p"},"clearTimeout"),". The ",(0,o.kt)("inlineCode",{parentName:"p"},"external"),"'s type annotation specifies that ",(0,o.kt)("inlineCode",{parentName:"p"},"setTimeout"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Takes a function that accepts ",(0,o.kt)("inlineCode",{parentName:"li"},"unit")," and returns ",(0,o.kt)("inlineCode",{parentName:"li"},"unit")," (which on the JS side turns into a function that accepts nothing and returns nothing aka ",(0,o.kt)("inlineCode",{parentName:"li"},"undefined"),"),"),(0,o.kt)("li",{parentName:"ul"},"and an integer that specifies the duration before calling said function,"),(0,o.kt)("li",{parentName:"ul"},"returns a number that is the timeout's ID. This number might be big, so we're modeling it as a float rather than the 32-bit int.")),(0,o.kt)("h3",i({},{id:"tips--tricks"}),"Tips & Tricks"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"The above isn't ideal"),". See how ",(0,o.kt)("inlineCode",{parentName:"p"},"setTimeout")," returns a ",(0,o.kt)("inlineCode",{parentName:"p"},"float")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"clearTimeout")," accepts one. There's no guarantee that you're passing the float created by ",(0,o.kt)("inlineCode",{parentName:"p"},"setTimeout")," into ",(0,o.kt)("inlineCode",{parentName:"p"},"clearTimeout"),"! For all we know, someone might pass it ",(0,o.kt)("inlineCode",{parentName:"p"},"Math.random()")," into the latter."),(0,o.kt)("p",null,"We're in a language with a great type system now! Let's leverage a popular feature to solve this problem: abstract types."),(0,o.kt)(s,{labels:["ReScript","JS Output"],mdxType:"CodeTab"},(0,o.kt)("pre",null,(0,o.kt)("code",i({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'type timerId\n@val external setTimeout: (unit => unit, int) => timerId = "setTimeout"\n@val external clearTimeout: timerId => unit = "clearTimeout"\n\nlet id = setTimeout(() => Js.log("hello"), 100)\nclearTimeout(id)\n')),(0,o.kt)("pre",null,(0,o.kt)("code",i({parentName:"pre"},{className:"language-js"}),'var id = setTimeout(function (param) {\n  console.log("hello");\n}, 100);\n\nclearTimeout(id);\n'))),(0,o.kt)("p",null,"Clearly, ",(0,o.kt)("inlineCode",{parentName:"p"},"timerId")," is a type that can only be created by ",(0,o.kt)("inlineCode",{parentName:"p"},"setTimeout"),"! Now we've guaranteed that ",(0,o.kt)("inlineCode",{parentName:"p"},"clearTimeout")," ",(0,o.kt)("em",{parentName:"p"},"will")," be passed a valid ID. Whether it's a number under the hood is now a mere implementation detail."),(0,o.kt)("p",null,"Since ",(0,o.kt)("inlineCode",{parentName:"p"},"external"),"s are inlined, we end up with JS output as readable as hand-written JS."),(0,o.kt)("h2",i({},{id:"global-modules"}),"Global Modules"),(0,o.kt)("p",null,"If you want to bind to a value inside a global module, e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},"Math.random"),", attach a ",(0,o.kt)("inlineCode",{parentName:"p"},"scope")," to your ",(0,o.kt)("inlineCode",{parentName:"p"},"val")," external:"),(0,o.kt)(s,{labels:["ReScript","JS Output"],mdxType:"CodeTab"},(0,o.kt)("pre",null,(0,o.kt)("code",i({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'@scope("Math") @val external random: unit => float = "random"\nlet someNumber = random()\n')),(0,o.kt)("pre",null,(0,o.kt)("code",i({parentName:"pre"},{className:"language-js"}),"var someNumber = Math.random();\n"))),(0,o.kt)("p",null,"you can bind to an arbitrarily deep object by passing a tuple to ",(0,o.kt)("inlineCode",{parentName:"p"},"scope"),":"),(0,o.kt)(s,{labels:["ReScript","JS Output"],mdxType:"CodeTab"},(0,o.kt)("pre",null,(0,o.kt)("code",i({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'@val @scope(("window", "location", "ancestorOrigins"))\nexternal length: int = "length"\n')),(0,o.kt)("pre",null,(0,o.kt)("code",i({parentName:"pre"},{className:"language-js"}),"// Empty output\n"))),(0,o.kt)("p",null,"This binds to ",(0,o.kt)("inlineCode",{parentName:"p"},"window.location.ancestorOrigins.length"),"."),(0,o.kt)("h2",i({},{id:"special-global-values"}),"Special Global Values"),(0,o.kt)("p",null,"Global values like ",(0,o.kt)("inlineCode",{parentName:"p"},"__filename")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"__DEV__")," don't always exist; you can't even model them as an ",(0,o.kt)("inlineCode",{parentName:"p"},"option"),", since the mere act of referring to them in ReScript (then compiled into JS) would trigger the usual ",(0,o.kt)("inlineCode",{parentName:"p"},"Uncaught ReferenceError: __filename is not defined")," error in e.g. the browser environment."),(0,o.kt)("p",null,"For these troublesome global values, ReScript provides a special approach: ",(0,o.kt)("inlineCode",{parentName:"p"},"%external(a_single_identifier)"),"."),(0,o.kt)(s,{labels:["ReScript","JS Output"],mdxType:"CodeTab"},(0,o.kt)("pre",null,(0,o.kt)("code",i({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'switch %external(__DEV__) {\n| Some(_) => Js.log("dev mode")\n| None => Js.log("production mode")\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",i({parentName:"pre"},{className:"language-js"}),'var match = typeof __DEV__ === "undefined" ? undefined : __DEV__;\n\nif (match !== undefined) {\n  console.log("dev mode");\n} else {\n  console.log("production mode");\n}\n'))),(0,o.kt)("p",null,"That first line's ",(0,o.kt)("inlineCode",{parentName:"p"},"typeof")," check won't trigger a JS ReferenceError."),(0,o.kt)("p",null,"Another example:"),(0,o.kt)(s,{labels:["ReScript","JS Output"],mdxType:"CodeTab"},(0,o.kt)("pre",null,(0,o.kt)("code",i({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'switch %external(__filename) {\n| Some(f) => Js.log(f)\n| None => Js.log("non-node environment")\n};\n')),(0,o.kt)("pre",null,(0,o.kt)("code",i({parentName:"pre"},{className:"language-js"}),'var match = typeof (__filename) === "undefined" ? undefined : (__filename);\n\nif (match !== undefined) {\n  console.log(match);\n} else {\n  console.log("non-node environment");\n}\n'))))}m.isMDXComponent=!0,m.frontmatter={title:"Bind to Global JS Values",description:"JS interop with global JS values in ReScript",canonical:"/docs/manual/latest/bind-to-global-js-values",__ghEditHref:"https://github.com/reason-association/rescript-lang.org/blob/master/pages/docs/manual/latest/bind-to-global-js-values.mdx"}},43137:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/manual/latest/bind-to-global-js-values",function(){return n(80933)}])}},function(e){e.O(0,[92888,49774,40179],(function(){return t=43137,e(e.s=t);var t}));var t=e.O();_N_E=t}]);