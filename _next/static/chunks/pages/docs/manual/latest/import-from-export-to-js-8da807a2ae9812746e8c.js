(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[11181],{22122:function(e,t,n){"use strict";function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}n.d(t,{Z:function(){return r}})},17375:function(e,t,n){"use strict";function r(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}n.d(t,{Z:function(){return r}})},3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return s},kt:function(){return c}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"===typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=u(n),c=a,f=d["".concat(p,".").concat(c)]||d[c]||m[c]||o;return n?r.createElement(f,i(i({ref:t},s),{},{components:n})):r.createElement(f,i({ref:t},s))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"===typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"===typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},96086:function(e){"use strict";var t=Object.assign.bind(Object);e.exports=t,e.exports.default=e.exports},87352:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return s}});var r,a=n(22122),o=n(17375),i=n(67294),l=n(3905),p=(i.createElement,r="CodeTab",function(e){return console.warn("Component "+r+" was not imported, exported, or provided by MDXProvider as global scope"),(0,l.kt)("div",e)}),u={};function s(e){var t=e.components,n=(0,o.Z)(e,["components"]);return(0,l.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"import-fromexport-to-js"},"Import from/Export to JS"),(0,l.kt)("p",null,"You've seen how ReScript's idiomatic ",(0,l.kt)("a",(0,a.Z)({parentName:"p"},{href:"import-export.md"}),"Import & Export")," works. This section describes how we work with importing stuff from JavaScript and exporting stuff for JavaScript consumption."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Note"),": due to JS ecosystem's module compatibility issues, our advice of keeping your ReScript file's compiled JS output open in a tab applies here ",(0,l.kt)("strong",{parentName:"p"},"more than ever"),", as you don't want to subtly output the wrong JS module import/export code, on top of having to deal with Babel/Webpack/Jest/Node's CommonJS<->ES6 compatibility shims."),(0,l.kt)("p",null,"In short: ",(0,l.kt)("strong",{parentName:"p"},"make sure your bindings below output what you'd have manually written in JS"),"."),(0,l.kt)("h2",{id:"output-format"},"Output Format"),(0,l.kt)("p",null,"We support 2 JavaScript import/export formats:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"CommonJS: ",(0,l.kt)("inlineCode",{parentName:"li"},"require('myFile')")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"module.export = ..."),"."),(0,l.kt)("li",{parentName:"ul"},"ES6 modules: ",(0,l.kt)("inlineCode",{parentName:"li"},"import * from 'MyReScriptFile'")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"export let ..."),".")),(0,l.kt)("p",null,"The format is ",(0,l.kt)("a",(0,a.Z)({parentName:"p"},{href:"build-configuration.md#package-specs"}),"configurable in via ",(0,l.kt)("inlineCode",{parentName:"a"},"bsconfig.json")),"."),(0,l.kt)("h2",{id:"import-from-javascript"},"Import From JavaScript"),(0,l.kt)("h3",{id:"import-a-javascript-modules-named-export"},"Import a JavaScript Module's Named Export"),(0,l.kt)("p",null,"Use the ",(0,l.kt)("inlineCode",{parentName:"p"},"module")," ",(0,l.kt)("a",(0,a.Z)({parentName:"p"},{href:"external.md"}),"external"),":"),(0,l.kt)(p,{labels:["ReScript","JS Output (CommonJS)","JS Output (ES6)"],mdxType:"CodeTab"},(0,l.kt)("pre",null,(0,l.kt)("code",(0,a.Z)({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'// Import nodejs\' path.dirname\n@module("path") external dirname: string => string = "dirname"\nlet root = dirname("/User/github") // returns "User"\n')),(0,l.kt)("pre",null,(0,l.kt)("code",(0,a.Z)({parentName:"pre"},{className:"language-js"}),'var Path = require("path");\nvar root = Path.dirname("/User/github");\n')),(0,l.kt)("pre",null,(0,l.kt)("code",(0,a.Z)({parentName:"pre"},{className:"language-js"}),'import * as Path from "path";\nvar root = Path.dirname("/User/github");\n'))),(0,l.kt)("p",null,"Here's what the ",(0,l.kt)("inlineCode",{parentName:"p"},"external")," does:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},'@module("path")'),": pass the name of the JS module; in this case, ",(0,l.kt)("inlineCode",{parentName:"li"},'"path"'),". The string can be anything: ",(0,l.kt)("inlineCode",{parentName:"li"},'"./src/myJsFile"'),", ",(0,l.kt)("inlineCode",{parentName:"li"},'"@myNpmNamespace/myLib"'),", etc."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"external"),": the general keyword for declaring a value that exists on the JS side."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"dirname"),": the binding name you'll use on the ReScript side."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"string => string"),": the type signature of ",(0,l.kt)("inlineCode",{parentName:"li"},"dirname"),". Mandatory for ",(0,l.kt)("inlineCode",{parentName:"li"},"external"),"s."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},'= "dirname"'),": the name of the variable inside the ",(0,l.kt)("inlineCode",{parentName:"li"},"path")," JS module. There's repetition in writing the first and second ",(0,l.kt)("inlineCode",{parentName:"li"},"dirname"),", because sometime the binding name you want to use on the ReScript side is different than the variable name the JS module exported.")),(0,l.kt)("h3",{id:"import-a-javascript-module-as-a-single-value"},"Import a JavaScript Module As a Single Value"),(0,l.kt)("p",null,"By omitting the string argument to ",(0,l.kt)("inlineCode",{parentName:"p"},"module"),", you bind to the whole JS module:"),(0,l.kt)(p,{labels:["ReScript","JS Output (CommonJS)","JS Output (ES6)"],mdxType:"CodeTab"},(0,l.kt)("pre",null,(0,l.kt)("code",(0,a.Z)({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'@module external leftPad: string => int => string = "./leftPad"\nlet paddedResult = leftPad("hi", 5)\n')),(0,l.kt)("pre",null,(0,l.kt)("code",(0,a.Z)({parentName:"pre"},{className:"language-js"}),'var LeftPad = require("./leftPad");\nvar paddedResult = LeftPad("hi", 5);\n')),(0,l.kt)("pre",null,(0,l.kt)("code",(0,a.Z)({parentName:"pre"},{className:"language-js"}),'import * as LeftPad from "./leftPad";\nvar paddedResult = LeftPad("hi", 5);\n'))),(0,l.kt)("p",null,"Depending on whether you're compiling ReScript to CommonJS or ES6 module, ",(0,l.kt)("strong",{parentName:"p"},"this feature will generate subtly different code"),". Please check both output tabs to see the difference. The ES6 output here would be wrong!"),(0,l.kt)("h3",{id:"import-an-es6-default-export"},"Import an ES6 Default Export"),(0,l.kt)("p",null,"Use the value ",(0,l.kt)("inlineCode",{parentName:"p"},'"default"')," on the right hand side:"),(0,l.kt)(p,{labels:["ReScript","JS Output (ES6)"],mdxType:"CodeTab"},(0,l.kt)("pre",null,(0,l.kt)("code",(0,a.Z)({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'@module("./student") external studentName: string = "default"\nJs.log(studentName)\n')),(0,l.kt)("pre",null,(0,l.kt)("code",(0,a.Z)({parentName:"pre"},{className:"language-js"}),'import Student from "./student";\nvar studentName = Student;\n'))),(0,l.kt)("h2",{id:"export-to-javascript"},"Export To JavaScript"),(0,l.kt)("h3",{id:"export-a-named-value"},"Export a Named Value"),(0,l.kt)("p",null,"As mentioned in ReScript's idiomatic ",(0,l.kt)("a",(0,a.Z)({parentName:"p"},{href:"import-export.md"}),"Import & Export"),", every let binding and module is exported by default to other ReScript modules (unless you use a ",(0,l.kt)("inlineCode",{parentName:"p"},".resi")," ",(0,l.kt)("a",(0,a.Z)({parentName:"p"},{href:"module#signatures"}),"interface file"),"). If you open up the compiled JS file, you'll see that these values can also directly be used by a ",(0,l.kt)("em",{parentName:"p"},"JavaScript")," file too."),(0,l.kt)("h3",{id:"export-an-es6-default-value"},"Export an ES6 Default Value"),(0,l.kt)("p",null,"If your JS project uses ES6 modules, you're likely exporting & importing some default values:"),(0,l.kt)("pre",null,(0,l.kt)("code",(0,a.Z)({parentName:"pre"},{className:"language-js"}),'// student.js\nexport default name = "Al";\n')),(0,l.kt)("pre",null,(0,l.kt)("code",(0,a.Z)({parentName:"pre"},{className:"language-js"}),"// teacher.js\nimport studentName from 'student.js';\n")),(0,l.kt)("p",null,"A JavaScript default export is really just syntax sugar for a named export implicitly called ",(0,l.kt)("inlineCode",{parentName:"p"},"default")," (now you know!). So to export a default value from ReScript, you can just do:"),(0,l.kt)(p,{labels:["ReScript","JS Output (CommonJS)","JS Output (ES6)"],mdxType:"CodeTab"},(0,l.kt)("pre",null,(0,l.kt)("code",(0,a.Z)({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'// ReScriptStudent.res\nlet default = "Bob"\n')),(0,l.kt)("pre",null,(0,l.kt)("code",(0,a.Z)({parentName:"pre"},{className:"language-js"}),'var $$default = "Bob";\n\nexports.$$default = $$default;\nexports.default = $$default;\n// informal transpiler-compatible marker of a default export compiled from ES6\nexports.__esModule = true;\n')),(0,l.kt)("pre",null,(0,l.kt)("code",(0,a.Z)({parentName:"pre"},{className:"language-js"}),'var $$default = "Bob";\n\nexport {\n  $$default,\n  $$default as default,\n}\n'))),(0,l.kt)("p",null,"You can then import this default export as usual on the JS side:"),(0,l.kt)("pre",null,(0,l.kt)("code",(0,a.Z)({parentName:"pre"},{className:"language-js"}),"// teacher2.js\nimport studentName from 'ReScriptStudent.js';\n")),(0,l.kt)("p",null,"If your JavaScript's ES6 default import is transpiled by Babel/Webpack/Jest into CommonJS ",(0,l.kt)("inlineCode",{parentName:"p"},"require"),"s, we've taken care of that too! See the CommonJS output tab for ",(0,l.kt)("inlineCode",{parentName:"p"},"__esModule"),"."))}s.isMDXComponent=!0,s.frontmatter={title:"Import from / Export to JS",description:"Importing / exporting JS module content in ReScript",canonical:"/docs/manual/latest/import-from-export-to-js",__ghEditHref:"https://github.com/reason-association/rescript-lang.org/blob/master/pages/docs/manual/latest/import-from-export-to-js.mdx"}},75465:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/manual/latest/import-from-export-to-js",function(){return n(87352)}])}},function(e){e.O(0,[49774],(function(){return t=75465,e(e.s=t);var t}));var t=e.O();_N_E=t}]);