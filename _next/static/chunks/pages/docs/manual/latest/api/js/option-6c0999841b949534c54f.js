(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[22679],{22122:function(e,n,t){"use strict";function a(){return(a=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}t.d(n,{Z:function(){return a}})},17375:function(e,n,t){"use strict";function a(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}t.d(n,{Z:function(){return a}})},3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return m},kt:function(){return c}});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),s=function(e){var n=a.useContext(p),t=n;return e&&(t="function"===typeof e?e(n):i(i({},n),e)),t},m=function(e){var n=s(e.components);return a.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),d=s(t),c=r,k=d["".concat(p,".").concat(c)]||d[c]||u[c]||o;return t?a.createElement(k,i(i({ref:n},m),{},{components:t})):a.createElement(k,i({ref:n},m))}));function c(e,n){var t=arguments,r=n&&n.mdxType;if("string"===typeof e||r){var o=t.length,i=new Array(o);i[0]=d;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"===typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},96086:function(e){"use strict";var n=Object.assign.bind(Object);e.exports=n,e.exports.default=e.exports},98344:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return m}});var a,r=t(22122),o=t(17375),i=t(67294),l=t(3905),p=(i.createElement,a="Intro",function(e){return console.warn("Component "+a+" was not imported, exported, or provided by MDXProvider as global scope"),(0,l.kt)("div",e)}),s={};function m(e){var n=e.components,t=(0,o.Z)(e,["components"]);return(0,l.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"option"},"Option"),(0,l.kt)(p,{mdxType:"Intro"},(0,l.kt)("p",null,"Provide utilities for handling ",(0,l.kt)("inlineCode",{parentName:"p"},"option"),".")),(0,l.kt)("h2",{id:"t"},"t"),(0,l.kt)("pre",null,(0,l.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"type t<'a> = option<'a>\n")),(0,l.kt)("h2",{id:"some"},"some"),(0,l.kt)("pre",null,(0,l.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let some: 'a => option<'a>\n")),(0,l.kt)("p",null,"Wraps the given value in ",(0,l.kt)("inlineCode",{parentName:"p"},"Some()")),(0,l.kt)("pre",null,(0,l.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),"Js.Option.some(1066) == Some(1066)\n")),(0,l.kt)("h2",{id:"issome"},"isSome"),(0,l.kt)("pre",null,(0,l.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let isSome: option<'a> => bool\n")),(0,l.kt)("p",null,"Returns ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," if the argument is ",(0,l.kt)("inlineCode",{parentName:"p"},"Some(value)"),"; ",(0,l.kt)("inlineCode",{parentName:"p"},"false")," if the argument is ",(0,l.kt)("inlineCode",{parentName:"p"},"None"),"."),(0,l.kt)("h2",{id:"issomevalue"},"isSomeValue"),(0,l.kt)("pre",null,(0,l.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let isSomeValue: ((. 'a, 'a) => bool, 'a, option<'a>) => bool\n")),(0,l.kt)("p",null,"The first argument to ",(0,l.kt)("inlineCode",{parentName:"p"},"isSomeValue")," is an uncurried function ",(0,l.kt)("inlineCode",{parentName:"p"},"eq()")," that takes two arguments and returns ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," if they are considered to be equal. It is used to compare a plain value ",(0,l.kt)("inlineCode",{parentName:"p"},"v1"),"(the second argument) with an ",(0,l.kt)("inlineCode",{parentName:"p"},"option")," value. If the ",(0,l.kt)("inlineCode",{parentName:"p"},"option")," value is ",(0,l.kt)("inlineCode",{parentName:"p"},"None"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"isSomeValue()")," returns ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),"; if the third argument is ",(0,l.kt)("inlineCode",{parentName:"p"},"Some(v2)"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"isSomeValue()")," returns the result of calling ",(0,l.kt)("inlineCode",{parentName:"p"},"eq(v1, v2)"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),"let clockEqual = (. a, b) => mod(a, 12) == mod(b, 12)\nJs.Option.isSomeValue(clockEqual, 3, Some(15)) == true\nJs.Option.isSomeValue(clockEqual, 3, Some(4)) == false\nJs.Option.isSomeValue(clockEqual, 3, None) == false\n")),(0,l.kt)("h2",{id:"isnone"},"isNone"),(0,l.kt)("pre",null,(0,l.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let isNone: option<'a> => bool\n")),(0,l.kt)("p",null,"Returns ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," if the argument is ",(0,l.kt)("inlineCode",{parentName:"p"},"None"),"; ",(0,l.kt)("inlineCode",{parentName:"p"},"false")," otherwise."),(0,l.kt)("h2",{id:"getexn"},"getExn"),(0,l.kt)("pre",null,(0,l.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let getExn: option<'a> => 'a\n")),(0,l.kt)("p",null,"If the argument to ",(0,l.kt)("inlineCode",{parentName:"p"},"getExn()")," is of the form ",(0,l.kt)("inlineCode",{parentName:"p"},"Some(value)"),", returns ",(0,l.kt)("inlineCode",{parentName:"p"},"value"),". If given ",(0,l.kt)("inlineCode",{parentName:"p"},"None"),", it throws a ",(0,l.kt)("inlineCode",{parentName:"p"},"getExn")," exception."),(0,l.kt)("h2",{id:"equal"},"equal"),(0,l.kt)("pre",null,(0,l.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let equal: ((. 'a, 'b) => bool, option<'a>, option<'b>) => bool\n")),(0,l.kt)("p",null,"The first argument to ",(0,l.kt)("inlineCode",{parentName:"p"},"equal")," is an uncurried function ",(0,l.kt)("inlineCode",{parentName:"p"},"eq()")," that takes two arguments and returns ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," if they are considered to be equal. The second and third arguments are ",(0,l.kt)("inlineCode",{parentName:"p"},"option")," values."),(0,l.kt)("p",null,"If the second and third arguments are of the form:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Some(v1)")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"Some(v2)"),": returns ",(0,l.kt)("inlineCode",{parentName:"li"},"eq(v1, v2)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Some(v1)")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"None"),": returns ",(0,l.kt)("inlineCode",{parentName:"li"},"false")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"None")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"Some(v2)"),": returns ",(0,l.kt)("inlineCode",{parentName:"li"},"false")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"None")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"None"),": returns ",(0,l.kt)("inlineCode",{parentName:"li"},"true"))),(0,l.kt)("pre",null,(0,l.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),"let clockEqual = (. a, b) => mod(a, 12) == mod(b, 12)\nJs.Option.equal(clockEqual, Some(3), Some(15)) == true\nJs.Option.equal(clockEqual, Some(3), Some(16)) == false\nJs.Option.equal(clockEqual, Some(3), None) == false\nJs.Option.equal(clockEqual, None, Some(15)) == false\nJs.Option.equal(clockEqual, None, None) == true\n")),(0,l.kt)("h2",{id:"andthen"},"andThen"),(0,l.kt)("pre",null,(0,l.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let andThen: ((. 'a) => option<'b>, option<'a>) => option<'b>\n")),(0,l.kt)("p",null,"The first argument to ",(0,l.kt)("inlineCode",{parentName:"p"},"andThen()")," is an uncurried function ",(0,l.kt)("inlineCode",{parentName:"p"},"f()")," that takes a plain value and returns an ",(0,l.kt)("inlineCode",{parentName:"p"},"option")," result. The second argument is an ",(0,l.kt)("inlineCode",{parentName:"p"},"option")," value. If the second argument is ",(0,l.kt)("inlineCode",{parentName:"p"},"None"),", the return value is ",(0,l.kt)("inlineCode",{parentName:"p"},"None"),". If the second argument is ",(0,l.kt)("inlineCode",{parentName:"p"},"Some(v)"),", the return value is ",(0,l.kt)("inlineCode",{parentName:"p"},"f(v)"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),"let reciprocal = (. x) => x == 0 ? None : Some(1.0 /. Belt.Int.toFloat(x))\nJs.Option.andThen(reciprocal, Some(5)) == Some(0.2)\nJs.Option.andThen(reciprocal, Some(0)) == None\nJs.Option.andThen(reciprocal, None) == None\n")),(0,l.kt)("h2",{id:"map"},"map"),(0,l.kt)("pre",null,(0,l.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let map: ((. 'a) => 'b, option<'a>) => option<'b>\n")),(0,l.kt)("p",null,"The first argument to ",(0,l.kt)("inlineCode",{parentName:"p"},"map()")," is an uncurried function ",(0,l.kt)("inlineCode",{parentName:"p"},"f()")," that takes a plain value and returns a plain result. The second argument is an ",(0,l.kt)("inlineCode",{parentName:"p"},"option")," value. If it is of the form ",(0,l.kt)("inlineCode",{parentName:"p"},"Some(v)"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"map()")," returns ",(0,l.kt)("inlineCode",{parentName:"p"},"Some(f(v))"),"; if it is ",(0,l.kt)("inlineCode",{parentName:"p"},"None"),", the return value is ",(0,l.kt)("inlineCode",{parentName:"p"},"None"),", and function ",(0,l.kt)("inlineCode",{parentName:"p"},"f()")," is not called."),(0,l.kt)("pre",null,(0,l.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),"let square = (. x) => x * x\nJs.Option.map(square, Some(3)) == Some(9)\nJs.Option.map(square, None) == None\n")),(0,l.kt)("h2",{id:"getwithdefault"},"getWithDefault"),(0,l.kt)("pre",null,(0,l.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let getWithDefault: ('a, option<'a>) => 'a\n")),(0,l.kt)("p",null,"The first argument to ",(0,l.kt)("inlineCode",{parentName:"p"},"getWithDefault()")," is a default value. If the second argument is of the form ",(0,l.kt)("inlineCode",{parentName:"p"},"Some(v)"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"getWithDefault()")," returns ",(0,l.kt)("inlineCode",{parentName:"p"},"v"),"; if the second argument is ",(0,l.kt)("inlineCode",{parentName:"p"},"None"),", the return value is the default value."),(0,l.kt)("pre",null,(0,l.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),"Js.Option.getWithDefault(1066, Some(15)) == 15\nJs.Option.getWithDefault(1066, None) == 1066\n")),(0,l.kt)("h2",{id:"default"},"default"),(0,l.kt)("pre",null,(0,l.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let default: ('a, option<'a>) => 'a\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"See:")," ",(0,l.kt)("a",(0,r.Z)({parentName:"p"},{href:"#getWithDefault"}),"getWithDefault")),(0,l.kt)("h2",{id:"filter"},"filter"),(0,l.kt)("pre",null,(0,l.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let filter: ((. 'a) => bool, option<'a>) => option<'a>\n")),(0,l.kt)("p",null,"The first argument to ",(0,l.kt)("inlineCode",{parentName:"p"},"filter()")," is an uncurried function that takes a plain value and returns a boolean. The second argument is an ",(0,l.kt)("inlineCode",{parentName:"p"},"option")," value."),(0,l.kt)("p",null,"If the second argument is of the form ",(0,l.kt)("inlineCode",{parentName:"p"},"Some(v)")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"f(v)")," is ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),",\nthe return value is ",(0,l.kt)("inlineCode",{parentName:"p"},"Some(v)"),". Otherwise, the return value is ",(0,l.kt)("inlineCode",{parentName:"p"},"None"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),"let isEven = (. x) => mod(x, 2) == 0\nJs.Option.filter(isEven, Some(2)) == Some(2)\nJs.Option.filter(isEven, Some(3)) == None\nJs.Option.filter(isEven, None) == None\n")),(0,l.kt)("h2",{id:"firstsome"},"firstSome"),(0,l.kt)("pre",null,(0,l.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-res",metastring:"sig",sig:!0}),"let firstSome: (option<'a>, option<'a>) => option<'a>\n")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"firstSome()")," function takes two ",(0,l.kt)("inlineCode",{parentName:"p"},"option")," values; if the first is of the form ",(0,l.kt)("inlineCode",{parentName:"p"},"Some(v1)"),", that is the return value. Otherwise, ",(0,l.kt)("inlineCode",{parentName:"p"},"firstSome()")," returns the second value."),(0,l.kt)("pre",null,(0,l.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.Option.firstSome(Some("one"), Some("two")) == Some("one")\nJs.Option.firstSome(Some("one"), None) == Some("one")\nJs.Option.firstSome(None, Some("two")) == Some("two")\nJs.Option.firstSome(None, None) == None\n')))}m.isMDXComponent=!0,m.frontmatter={__ghEditHref:"https://github.com/reason-association/rescript-lang.org/blob/master/pages/docs/manual/latest/api/js/option.mdx"}},16290:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/manual/latest/api/js/option",function(){return t(98344)}])}},function(e){e.O(0,[49774],(function(){return n=16290,e(e.s=n);var n}));var n=e.O();_N_E=n}]);