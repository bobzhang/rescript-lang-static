(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[11423],{22122:function(e,t,n){"use strict";function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}n.d(t,{Z:function(){return a}})},17375:function(e,t,n){"use strict";function a(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}n.d(t,{Z:function(){return a}})},3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return d}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"===typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(n),d=r,g=c["".concat(s,".").concat(d)]||c[d]||m[d]||o;return n?a.createElement(g,l(l({ref:t},u),{},{components:n})):a.createElement(g,l({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"===typeof e||r){var o=n.length,l=new Array(o);l[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"===typeof e?e:r,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},96086:function(e){"use strict";var t=Object.assign.bind(Object);e.exports=t,e.exports.default=e.exports},33058:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return u}});var a,r=n(22122),o=n(17375),l=n(67294),i=n(3905),s=(l.createElement,a="CodeTab",function(e){return console.warn("Component "+a+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",e)}),p={};function u(e){var t=e.components,n=(0,o.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"bind-to-global-js-values"},"Bind to Global JS Values"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"First"),", make sure the value you'd like to model doesn't already exist in our ",(0,i.kt)("a",(0,r.Z)({parentName:"p"},{href:"api/js"}),"provided API"),"."),(0,i.kt)("p",null,"Some JS values, like ",(0,i.kt)("inlineCode",{parentName:"p"},"setTimeout"),", live in the global scope. You can bind to them like so:"),(0,i.kt)(s,{labels:["Reason (Old Syntax)","ML (Older Syntax)","JS Output"],mdxType:"CodeTab"},(0,i.kt)("pre",null,(0,i.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-re"}),'[@bs.val] external setTimeout: (unit => unit, int) => float = "setTimeout";\n[@bs.val] external clearTimeout: float => unit = "clearTimeout";\n')),(0,i.kt)("pre",null,(0,i.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-ml"}),'external setTimeout: (unit -> unit) -> int -> float = "setTimeout" [@@bs.val]\nexternal clearTimeout: float -> unit = "clearTimeout" [@@bs.val]\n')),(0,i.kt)("pre",null,(0,i.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-js"}),"// Empty output\n"))),(0,i.kt)("p",null,"(We already provide ",(0,i.kt)("inlineCode",{parentName:"p"},"setTimeout"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"clearTimeout")," and others in the ",(0,i.kt)("a",(0,r.Z)({parentName:"p"},{href:"api/js/global"}),"Js.Global")," module)."),(0,i.kt)("p",null,"This binds to the JavaScript ",(0,i.kt)("a",(0,r.Z)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/WindowOrworkerGlobalScope/setTimeout"}),(0,i.kt)("inlineCode",{parentName:"a"},"setTimeout"))," methods and the corresponding ",(0,i.kt)("inlineCode",{parentName:"p"},"clearTimeout"),". The ",(0,i.kt)("inlineCode",{parentName:"p"},"external"),"'s type annotation specifies that ",(0,i.kt)("inlineCode",{parentName:"p"},"setTimeout"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Takes a function that accepts ",(0,i.kt)("inlineCode",{parentName:"li"},"unit")," and returns ",(0,i.kt)("inlineCode",{parentName:"li"},"unit")," (which on the JS side turns into a function that accepts nothing and returns nothing aka ",(0,i.kt)("inlineCode",{parentName:"li"},"undefined"),"),"),(0,i.kt)("li",{parentName:"ul"},"and an integer that specifies the duration before calling said function,"),(0,i.kt)("li",{parentName:"ul"},"returns a number that is the timeout's ID. This number might be big, so we're modeling it as a float rather than the 32-bit int.")),(0,i.kt)("h3",{id:"tips--tricks"},"Tips & Tricks"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"The above isn't ideal"),". See how ",(0,i.kt)("inlineCode",{parentName:"p"},"setTimeout")," returns a ",(0,i.kt)("inlineCode",{parentName:"p"},"float")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"clearTimeout")," accepts one. There's no guarantee that you're passing the float created by ",(0,i.kt)("inlineCode",{parentName:"p"},"setTimeout")," into ",(0,i.kt)("inlineCode",{parentName:"p"},"clearTimeout"),"! For all we know, someone might pass it ",(0,i.kt)("inlineCode",{parentName:"p"},"Math.random()")," into the latter."),(0,i.kt)("p",null,"We're in a language with a great type system now! Let's leverage a popular feature to solve this problem: abstract types."),(0,i.kt)(s,{labels:["Reason (Old Syntax)","ML (Older Syntax)","JS Output"],mdxType:"CodeTab"},(0,i.kt)("pre",null,(0,i.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-re"}),'type timerId;\n[@bs.val] external setTimeout: (unit => unit, int) => timerId = "setTimeout";\n[@bs.val] external clearTimeout: timerId => unit = "clearTimeout";\n\nlet id = setTimeout(() => Js.log("hello"), 100);\nclearTimeout(id);\n')),(0,i.kt)("pre",null,(0,i.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-ml"}),'type timerId\nexternal setTimeout: (unit -> unit) -> int -> timerId = "setTimeout" [@@bs.val]\nexternal clearTimeout: timerId -> unit = "clearTimeout" [@@bs.val]\n\nlet id = setTimeout (fun () -> Js.log "hello") 100\nlet () = clearTimeout id\n')),(0,i.kt)("pre",null,(0,i.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-js"}),'var id = setTimeout(function (param) {\n  console.log("hello");\n}, 100);\n\nclearTimeout(id);\n'))),(0,i.kt)("p",null,"Clearly, ",(0,i.kt)("inlineCode",{parentName:"p"},"timerId")," is a type that can only be created by ",(0,i.kt)("inlineCode",{parentName:"p"},"setTimeout"),"! Now we've guaranteed that ",(0,i.kt)("inlineCode",{parentName:"p"},"clearTimeout")," ",(0,i.kt)("em",{parentName:"p"},"will")," be passed a valid ID. Whether it's a number under the hood is now a mere implementation detail."),(0,i.kt)("p",null,"Since ",(0,i.kt)("inlineCode",{parentName:"p"},"external"),"s are inlined, we end up with JS output as readable as hand-written JS."),(0,i.kt)("h2",{id:"global-modules"},"Global Modules"),(0,i.kt)("p",null,"If you want to bind to a value inside a global module, e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"Math.random"),", attach a ",(0,i.kt)("inlineCode",{parentName:"p"},"bs.scope")," to your ",(0,i.kt)("inlineCode",{parentName:"p"},"bs.val")," external:"),(0,i.kt)(s,{labels:["Reason (Old Syntax)","ML (Older Syntax)","JS Output"],mdxType:"CodeTab"},(0,i.kt)("pre",null,(0,i.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-re"}),'[@bs.scope "Math"] [@bs.val] external random: unit => float = "random";\nlet someNumber = random();\n')),(0,i.kt)("pre",null,(0,i.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-ml"}),'external random : unit -> float = "random" [@@bs.scope "Math"][@@bs.val]\nlet someNumber = random ()\n')),(0,i.kt)("pre",null,(0,i.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-js"}),"var someNumber = Math.random();\n"))),(0,i.kt)("p",null,"you can bind to an arbitrarily deep object by passing a tuple to ",(0,i.kt)("inlineCode",{parentName:"p"},"bs.scope"),":"),(0,i.kt)(s,{labels:["Reason (Old Syntax)","ML (Older Syntax)","JS Output"],mdxType:"CodeTab"},(0,i.kt)("pre",null,(0,i.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-re"}),'[@bs.val] [@bs.scope ("window", "location", "ancestorOrigins")]\nexternal length: int = "length";\n')),(0,i.kt)("pre",null,(0,i.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-ml"}),'external length: int = "length"\n[@@bs.val][@@bs.scope ("window", "location", "ancestorOrigins")]\n')),(0,i.kt)("pre",null,(0,i.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-js"}),"// Empty output\n"))),(0,i.kt)("p",null,"This binds to ",(0,i.kt)("inlineCode",{parentName:"p"},"window.location.ancestorOrigins.length"),"."),(0,i.kt)("h2",{id:"special-global-values"},"Special Global Values"),(0,i.kt)("p",null,"Global values like ",(0,i.kt)("inlineCode",{parentName:"p"},"__filename")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"__DEV__")," don't always exist; you can't even model them as an ",(0,i.kt)("inlineCode",{parentName:"p"},"option"),", since the mere act of referring to them in ReScript (then compiled into JS) would trigger the usual ",(0,i.kt)("inlineCode",{parentName:"p"},"Uncaught ReferenceError: __filename is not defined")," error in e.g. the browser environment."),(0,i.kt)("p",null,"For these troublesome global values, ReScript provides a special approach: ",(0,i.kt)("inlineCode",{parentName:"p"},"%external(a_single_identifier)"),"."),(0,i.kt)(s,{labels:["Reason (Old Syntax)","ML (Older Syntax)","JS Output"],mdxType:"CodeTab"},(0,i.kt)("pre",null,(0,i.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-re"}),'switch ([%external __DEV__]) {\n| Some(_) => Js.log("dev mode")\n| None => Js.log("production mode")\n};\n')),(0,i.kt)("pre",null,(0,i.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-ml"}),'let () = match [%external __DEV__] with\n| Some _ -> Js.log "dev mode"\n| None -> Js.log "production mode"\n')),(0,i.kt)("pre",null,(0,i.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-js"}),'var match = typeof __DEV__ === "undefined" ? undefined : __DEV__;\n\nif (match !== undefined) {\n  console.log("dev mode");\n} else {\n  console.log("production mode");\n}\n'))),(0,i.kt)("p",null,"That first line's ",(0,i.kt)("inlineCode",{parentName:"p"},"typeof")," check won't trigger a JS ReferenceError."),(0,i.kt)("p",null,"Another example:"),(0,i.kt)(s,{labels:["Reason (Old Syntax)","ML (Older Syntax)","JS Output"],mdxType:"CodeTab"},(0,i.kt)("pre",null,(0,i.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-re"}),'switch ([%external __filename]) {\n| Some(f) => Js.log(f)\n| None => Js.log("non-node environment")\n};\n')),(0,i.kt)("pre",null,(0,i.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-ml"}),'let () = match [%external __filename] with\n| Some f -> Js.log f\n| None -> Js.log "non-node environment"\n')),(0,i.kt)("pre",null,(0,i.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-js"}),'var match = typeof (__filename) === "undefined" ? undefined : (__filename);\n\nif (match !== undefined) {\n  console.log(match);\n} else {\n  console.log("non-node environment");\n}\n'))))}u.isMDXComponent=!0,u.frontmatter={title:"Bind to Global JS Values",description:"JS interop with global JS values in ReScript",canonical:"/docs/manual/latest/bind-to-global-js-values",__ghEditHref:"https://github.com/reason-association/rescript-lang.org/blob/master/pages/docs/manual/v8.0.0/bind-to-global-js-values.mdx"}},19849:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/manual/v8.0.0/bind-to-global-js-values",function(){return n(33058)}])}},function(e){e.O(0,[49774],(function(){return t=19849,e(e.s=t);var t}));var t=e.O();_N_E=t}]);