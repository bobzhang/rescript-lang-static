(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[83733],{22122:function(e,n,t){"use strict";function r(){return(r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}t.d(n,{Z:function(){return r}})},17375:function(e,n,t){"use strict";function r(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}t.d(n,{Z:function(){return r}})},3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return c},kt:function(){return f}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"===typeof e?e(n):s(s({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(t),f=a,y=d["".concat(l,".").concat(f)]||d[f]||u[f]||o;return t?r.createElement(y,s(s({ref:n},c),{},{components:t})):r.createElement(y,s({ref:n},c))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"===typeof e||a){var o=t.length,s=new Array(o);s[0]=d;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"===typeof e?e:a,s[1]=i;for(var p=2;p<o;p++)s[p]=t[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},96086:function(e){"use strict";var n=Object.assign.bind(Object);e.exports=n,e.exports.default=e.exports},4078:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return c}});var r,a=t(22122),o=t(17375),s=t(67294),i=t(3905),l=(s.createElement,r="CodeTab",function(e){return console.warn("Component "+r+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",e)}),p={};function c(e){var n=e.components,t=(0,o.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"json"},"JSON"),(0,i.kt)("h2",{id:"parse"},"Parse"),(0,i.kt)("p",null,"Bind to JavaScript's ",(0,i.kt)("inlineCode",{parentName:"p"},"JSON.parse")," and type the return value as the type you're expecting:"),(0,i.kt)(l,{labels:["Reason (Old Syntax)","ML (Older Syntax)","JS Output"],mdxType:"CodeTab"},(0,i.kt)("pre",null,(0,i.kt)("code",(0,a.Z)({parentName:"pre"},{className:"language-re"}),'// declare the shape of the json you\'re binding to\ntype data = {names: array(string)};\n\n// bind to JS\' JSON.parse\n[@bs.scope "JSON"] [@bs.val]\nexternal parseIntoMyData: string => data = "parse";\n\nlet result = parseIntoMyData({|{"names": ["Luke", "Christine"]}|});\nlet name1 = result.names[0];\n')),(0,i.kt)("pre",null,(0,i.kt)("code",(0,a.Z)({parentName:"pre"},{className:"language-ml"}),'(* declare the shape of the json you\'re binding to *)\ntype data = {names: string array}\n\n(* bind to JS\' JSON.parse *)\nexternal parseIntoMyData: string -> data = "parse"\n[@@bs.scope "JSON"] [@@bs.val]\n\nlet result = parseIntoMyData {|{"names": ["Luke", "Christine"]}|}\nlet name1 = (result.names).(0)\n')),(0,i.kt)("pre",null,(0,i.kt)("code",(0,a.Z)({parentName:"pre"},{className:"language-js"}),'var result = JSON.parse("{\\"names\\": [\\"Luke\\", \\"Christine\\"]}");\nvar name1 = result.names[0];\n'))),(0,i.kt)("p",null,"Where ",(0,i.kt)("inlineCode",{parentName:"p"},"data")," can be any type you assume the JSON is. As you can see, this compiles to a straightforward ",(0,i.kt)("inlineCode",{parentName:"p"},"JSON.parse")," call. As with regular JS, this is convenient, but has no guarantee that e.g. the data is correctly shaped, or even syntactically valid. Slightly dangerous."),(0,i.kt)("h2",{id:"stringify"},"Stringify"),(0,i.kt)("p",null,"Use ",(0,i.kt)("inlineCode",{parentName:"p"},"Js.Json.stringify"),":"),(0,i.kt)(l,{labels:["Reason (Old Syntax)","ML (Older Syntax)","JS Output"],mdxType:"CodeTab"},(0,i.kt)("pre",null,(0,i.kt)("code",(0,a.Z)({parentName:"pre"},{className:"language-re"}),'Js.log(Js.Json.stringifyAny([|"Amy", "Joe"|]));\n')),(0,i.kt)("pre",null,(0,i.kt)("code",(0,a.Z)({parentName:"pre"},{className:"language-ml"}),'Js.log (Js.Json.stringifyAny [|"Amy"; "Joe"|])\n')),(0,i.kt)("pre",null,(0,i.kt)("code",(0,a.Z)({parentName:"pre"},{className:"language-js"}),'console.log(JSON.stringify([\n  "Amy",\n  "Joe"\n]));\n'))),(0,i.kt)("h2",{id:"advanced"},"Advanced"),(0,i.kt)("p",null,"The ",(0,i.kt)("a",(0,a.Z)({parentName:"p"},{href:"api/js/json"}),"Js.Json")," module provides slightly safer, low-level building blocks for power users who want to parse JSON on a per-field basis. See the examples in the API docs."))}c.isMDXComponent=!0,c.frontmatter={title:"JSON",description:"Interacting with JSON in ReScript",canonical:"/docs/manual/latest/json",__ghEditHref:"https://github.com/reason-association/rescript-lang.org/blob/master/pages/docs/manual/v8.0.0/json.mdx"}},16440:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/manual/v8.0.0/json",function(){return t(4078)}])}},function(e){e.O(0,[49774],(function(){return n=16440,e(e.s=n);var n}));var n=e.O();_N_E=n}]);