(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[95045],{22122:function(e,t,n){"use strict";function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}n.d(t,{Z:function(){return r}})},17375:function(e,t,n){"use strict";function r(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}n.d(t,{Z:function(){return r}})},3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"===typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),f=p(n),d=a,m=f["".concat(l,".").concat(d)]||f[d]||u[d]||o;return n?r.createElement(m,i(i({ref:t},c),{},{components:n})):r.createElement(m,i({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"===typeof e||a){var o=n.length,i=new Array(o);i[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"===typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},96086:function(e){"use strict";var t=Object.assign.bind(Object);e.exports=t,e.exports.default=e.exports},49138:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return c}});var r,a=n(22122),o=n(17375),i=n(67294),s=n(3905),l=(i.createElement,r="CodeTab",function(e){return console.warn("Component "+r+" was not imported, exported, or provided by MDXProvider as global scope"),(0,s.kt)("div",e)}),p={};function c(e){var t=e.components,n=(0,o.Z)(e,["components"]);return(0,s.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"json"},"JSON"),(0,s.kt)("h2",{id:"parse"},"Parse"),(0,s.kt)("p",null,"Bind to JavaScript's ",(0,s.kt)("inlineCode",{parentName:"p"},"JSON.parse")," and type the return value as the type you're expecting:"),(0,s.kt)(l,{labels:["ReScript","JS Output"],mdxType:"CodeTab"},(0,s.kt)("pre",null,(0,s.kt)("code",(0,a.Z)({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'// declare the shape of the json you\'re binding to\ntype data = {names: array<string>}\n\n// bind to JS\' JSON.parse\n@scope("JSON") @val\nexternal parseIntoMyData: string => data = "parse"\n\nlet result = parseIntoMyData(`{"names": ["Luke", "Christine"]}`)\nlet name1 = result.names[0]\n')),(0,s.kt)("pre",null,(0,s.kt)("code",(0,a.Z)({parentName:"pre"},{className:"language-js"}),'var result = JSON.parse("{\\"names\\": [\\"Luke\\", \\"Christine\\"]}");\nvar name1 = result.names[0];\n'))),(0,s.kt)("p",null,"Where ",(0,s.kt)("inlineCode",{parentName:"p"},"data")," can be any type you assume the JSON is. As you can see, this compiles to a straightforward ",(0,s.kt)("inlineCode",{parentName:"p"},"JSON.parse")," call. As with regular JS, this is convenient, but has no guarantee that e.g. the data is correctly shaped, or even syntactically valid. Slightly dangerous."),(0,s.kt)("h2",{id:"stringify"},"Stringify"),(0,s.kt)("p",null,"Use ",(0,s.kt)("inlineCode",{parentName:"p"},"Js.Json.stringify"),":"),(0,s.kt)(l,{labels:["ReScript","JS Output"],mdxType:"CodeTab"},(0,s.kt)("pre",null,(0,s.kt)("code",(0,a.Z)({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'Js.log(Js.Json.stringifyAny(["Amy", "Joe"]))\n')),(0,s.kt)("pre",null,(0,s.kt)("code",(0,a.Z)({parentName:"pre"},{className:"language-js"}),'console.log(JSON.stringify([\n  "Amy",\n  "Joe"\n]));\n'))),(0,s.kt)("h2",{id:"advanced"},"Advanced"),(0,s.kt)("p",null,"The ",(0,s.kt)("a",(0,a.Z)({parentName:"p"},{href:"api/js/json"}),"Js.Json")," module provides slightly safer, low-level building blocks for power users who want to parse JSON on a per-field basis. See the examples in the API docs."))}c.isMDXComponent=!0,c.frontmatter={title:"JSON",description:"Interacting with JSON in ReScript",canonical:"/docs/manual/latest/json",__ghEditHref:"https://github.com/reason-association/rescript-lang.org/blob/master/pages/docs/manual/v9.0.0/json.mdx"}},31288:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/manual/v9.0.0/json",function(){return n(49138)}])}},function(e){e.O(0,[49774],(function(){return t=31288,e(e.s=t);var t}));var t=e.O();_N_E=t}]);