(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[33601],{22122:function(e,n,t){"use strict";function r(){return(r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}t.d(n,{Z:function(){return r}})},17375:function(e,n,t){"use strict";function r(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}t.d(n,{Z:function(){return r}})},3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return p},kt:function(){return m}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"===typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(t),m=o,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||a;return t?r.createElement(f,l(l({ref:n},p),{},{components:t})):r.createElement(f,l({ref:n},p))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"===typeof e||o){var a=t.length,l=new Array(a);l[0]=u;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"===typeof e?e:o,l[1]=i;for(var c=2;c<a;c++)l[c]=t[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},96086:function(e){"use strict";var n=Object.assign.bind(Object);e.exports=n,e.exports.default=e.exports},5822:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return p}});var r,o=t(22122),a=t(17375),l=t(67294),i=t(3905),s=(l.createElement,r="CodeTab",function(e){return console.warn("Component "+r+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",e)}),c={};function p(e){var n=e.components,t=(0,a.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,o.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"unboxed"},"Unboxed"),(0,i.kt)("p",null,"Consider a ReScript variant with a single payload, and a record with a single field:"),(0,i.kt)(s,{labels:["ReScript","JS Output"],mdxType:"CodeTab"},(0,i.kt)("pre",null,(0,i.kt)("code",(0,o.Z)({parentName:"pre"},{className:"language-res"}),'type name = Name(string)\nlet studentName = Name("Joe")\n\ntype greeting = {message: string}\nlet hi = {message: "hello!"}\n')),(0,i.kt)("pre",null,(0,i.kt)("code",(0,o.Z)({parentName:"pre"},{className:"language-js"}),'var studentName = /* Name */{\n  _0: "Joe"\n};\n\nvar hi = {\n  message: "hello!"\n};\n'))),(0,i.kt)("p",null,"If you check the JavaScript output, you'll see the ",(0,i.kt)("inlineCode",{parentName:"p"},"studentName")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"hi")," JS object, as expected (see the ",(0,i.kt)("a",(0,o.Z)({parentName:"p"},{href:"variant#javascript-output"}),"variant JS output")," and ",(0,i.kt)("a",(0,o.Z)({parentName:"p"},{href:"record#javascript-output"}),"record JS output")," sections for details)."),(0,i.kt)("p",null,"For performance and certain JavaScript interop situations, ReScript offers a way to unwrap (aka unbox) the JS object wrappers from the output for records with a single field and variants with a single constructor and single payload. Annotate their type declaration with the attribute ",(0,i.kt)("inlineCode",{parentName:"p"},"@unboxed"),":"),(0,i.kt)(s,{labels:["ReScript","JS Output"],mdxType:"CodeTab"},(0,i.kt)("pre",null,(0,i.kt)("code",(0,o.Z)({parentName:"pre"},{className:"language-res"}),'@unboxed\ntype name = Name(string)\nlet studentName = Name("Joe")\n\n@unboxed\ntype greeting = {message: string}\nlet hi = {message: "hello!"}\n')),(0,i.kt)("pre",null,(0,i.kt)("code",(0,o.Z)({parentName:"pre"},{className:"language-js"}),'var studentName = "Joe";\n\nvar hi = "hello!";\n'))),(0,i.kt)("p",null,"Check the new output! Clean."),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("p",null,"Why would you ever want a variant or a record with a single payload? Why not just... pass the payload? Here's one use-case for variant."),(0,i.kt)("p",null,"Suppose you have a game with a local/global coordinate system:"),(0,i.kt)(s,{labels:["ReScript","JS Output"],mdxType:"CodeTab"},(0,i.kt)("pre",null,(0,i.kt)("code",(0,o.Z)({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'type coordinates = {x: float, y: float}\n\nlet renderDot = (coordinates) => {\n  Js.log3("Pretend to draw at:", coordinates.x, coordinates.y)\n}\n\nlet toWorldCoordinates = (localCoordinates) => {\n  {\n    x: localCoordinates.x +. 10.,\n    y: localCoordinates.x +. 20.,\n  }\n}\n\nlet playerLocalCoordinates = {x: 20.5, y: 30.5}\n\nrenderDot(playerLocalCoordinates)\n')),(0,i.kt)("pre",null,(0,i.kt)("code",(0,o.Z)({parentName:"pre"},{className:"language-js"}),'function renderDot(coordinates) {\n  console.log("Pretend to draw at:", coordinates.x, coordinates.y);\n}\n\nfunction toWorldCoordinates(localCoordinates) {\n  return {\n    x: localCoordinates.x + 10,\n    y: localCoordinates.x + 20\n  };\n}\n\nvar playerLocalCoordinates = {\n  x: 20.5,\n  y: 30.5\n};\n\nrenderDot(playerLocalCoordinates);\n'))),(0,i.kt)("p",null,"Oops, that's wrong! ",(0,i.kt)("inlineCode",{parentName:"p"},"renderDot")," should have taken global coordinates, not local ones... Let's prevent passing the wrong kind of coordinates:"),(0,i.kt)(s,{labels:["ReScript","JS Output"],mdxType:"CodeTab"},(0,i.kt)("pre",null,(0,i.kt)("code",(0,o.Z)({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),'type coordinates = {x: float, y: float}\n@unboxed type localCoordinates = Local(coordinates)\n@unboxed type worldCoordinates = World(coordinates)\n\nlet renderDot = (World(coordinates)) => {\n  Js.log3("Pretend to draw at:", coordinates.x, coordinates.y)\n}\n\nlet toWorldCoordinates = (Local(coordinates)) => {\n  World({\n    x: coordinates.x +. 10.,\n    y: coordinates.x +. 20.,\n  })\n}\n\nlet playerLocalCoordinates = Local({x: 20.5, y: 30.5})\n\n// This now errors!\n// renderDot(playerLocalCoordinates)\n// We\'re forced to do this instead:\nrenderDot(playerLocalCoordinates->toWorldCoordinates)\n')),(0,i.kt)("pre",null,(0,i.kt)("code",(0,o.Z)({parentName:"pre"},{className:"language-js"}),'function renderDot(coordinates) {\n  console.log("Pretend to draw at:", coordinates.x, coordinates.y);\n}\n\nfunction toWorldCoordinates(coordinates) {\n  return {\n    x: coordinates.x + 10,\n    y: coordinates.x + 20\n  };\n}\n\nvar playerLocalCoordinates = {\n  x: 20.5,\n  y: 30.5\n};\n\nrenderDot(toWorldCoordinates(playerLocalCoordinates));\n'))),(0,i.kt)("p",null,"Now ",(0,i.kt)("inlineCode",{parentName:"p"},"renderDot")," only takes ",(0,i.kt)("inlineCode",{parentName:"p"},"worldCoordinates"),". Through a nice combination of using distinct variant types + argument destructuring, we've achieved better safety ",(0,i.kt)("strong",{parentName:"p"},"without compromising on performance"),": the ",(0,i.kt)("inlineCode",{parentName:"p"},"unboxed")," attribute compiled to clean, variant-wrapper-less JS code! Check the output."),(0,i.kt)("p",null,"As for a record with a single field, the use-cases are a bit more edgy. We won't mention them here."))}p.isMDXComponent=!0,p.frontmatter={title:"Unboxed",description:"Unbox a wrapper",canonical:"/docs/manual/latest/unboxed",__ghEditHref:"https://github.com/reason-association/rescript-lang.org/blob/master/pages/docs/manual/v9.0.0/unboxed.mdx"}},84591:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/manual/v9.0.0/unboxed",function(){return t(5822)}])}},function(e){e.O(0,[49774],(function(){return n=84591,e(e.s=n);var n}));var n=e.O();_N_E=n}]);