(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[30185],{22122:function(e,n,t){"use strict";function r(){return(r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}t.d(n,{Z:function(){return r}})},17375:function(e,n,t){"use strict";function r(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}t.d(n,{Z:function(){return r}})},3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return p},kt:function(){return d}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"===typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),f=u(t),d=a,m=f["".concat(c,".").concat(d)]||f[d]||s[d]||o;return t?r.createElement(m,i(i({ref:n},p),{},{components:t})):r.createElement(m,i({ref:n},p))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"===typeof e||a){var o=t.length,i=new Array(o);i[0]=f;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"===typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},96086:function(e){"use strict";var n=Object.assign.bind(Object);e.exports=n,e.exports.default=e.exports},50171:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return c}});var r=t(22122),a=t(17375),o=t(67294),i=t(3905),l=(o.createElement,{});function c(e){var n=e.components,t=(0,a.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"try-online"},"Try Online"),(0,i.kt)("p",null,"Our ",(0,i.kt)("a",(0,r.Z)({parentName:"p"},{href:"/try"}),"Playground")," lets you try ReScript online, and comes with ",(0,i.kt)("a",(0,r.Z)({parentName:"p"},{href:"/docs/react/latest/introduction"}),"ReScript-React")," preinstalled."),(0,i.kt)("h2",{id:"quickly-evaluate-code-in-terminal"},"Quickly Evaluate Code In Terminal"),(0,i.kt)("p",null,"Use ",(0,i.kt)("inlineCode",{parentName:"p"},"bsc -e"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-sh"}),"\u276f bsc -e 'let add = (x, y) => x + y'\n// Generated by ReScript, PLEASE EDIT WITH CARE\n'use strict';\n\n\nfunction add(x, y) {\n  return x + y | 0;\n}\n\nexports.add = add;\n/* No side effect */\n")),(0,i.kt)("p",null,"You can pipe the output to Node to run it:"),(0,i.kt)("pre",null,(0,i.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-sh"}),"\u276f bsc -e 'let add = (x, y) => x + y; Js.log(add(1, 2))' | node\n3\n")),(0,i.kt)("h2",{id:"quickly-compile-a-single-file"},"Quickly Compile A Single File"),(0,i.kt)("p",null,"You can compile a file directly via ",(0,i.kt)("inlineCode",{parentName:"p"},"bsc MyFile.res"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),"// MyFile.res\nlet rec fib = n => {\n  switch n {\n  | 0 | 1 => n\n  | n => fib(n - 1) + fib(n - 2)\n  }\n}\nJs.log(fib(0))\n")),(0,i.kt)("pre",null,(0,i.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-sh"}),"\u276f bsc MyFile.res\n// Generated by ReScript, PLEASE EDIT WITH CARE\n'use strict';\n\n\nfunction fib(n) {\n  if (n === 0 || n === 1) {\n    return n;\n  } else {\n    return fib(n - 1 | 0) + fib(n - 2 | 0) | 0;\n  }\n}\n\nconsole.log(fib(0));\n\nexports.fib = fib;\n/*  Not a pure module */\n")),(0,i.kt)("p",null,"You can also get the inferred type signatures directly via ",(0,i.kt)("inlineCode",{parentName:"p"},"bsc -i MyFile.res")),(0,i.kt)("pre",null,(0,i.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-sh"}),"\u276f bsc -i MyFile.res\nlet fib: int => int\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Note")," that this is for quick tests. For real projects, use our ",(0,i.kt)("a",(0,r.Z)({parentName:"p"},{href:"build-overview.md"}),"build system"),"."),(0,i.kt)("h2",{id:"format-code"},"Format Code"),(0,i.kt)("pre",null,(0,i.kt)("code",(0,r.Z)({parentName:"pre"},{className:"language-sh"}),"\u276f bsc -format MyFile.res\nlet rec fib = n => {\n  switch n {\n  | 0 | 1 => n\n  | n => fib(n - 1) + fib(n - 2)\n  }\n}\nJs.log(fib(0))\n")),(0,i.kt)("p",null,"Our ",(0,i.kt)("a",(0,r.Z)({parentName:"p"},{href:"editor-plugins.md"}),"editor plugins")," come with formatting by default."))}c.isMDXComponent=!0,c.frontmatter={title:"Try",description:"Try ReScript via Command Line",canonical:"/docs/manual/latest/try",__ghEditHref:"https://github.com/reason-association/rescript-lang.org/blob/master/pages/docs/manual/v9.0.0/try.mdx"}},92152:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/manual/v9.0.0/try",function(){return t(50171)}])}},function(e){e.O(0,[49774],(function(){return n=92152,e(e.s=n);var n}));var n=e.O();_N_E=n}]);