(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[53648],{22122:function(e,t,n){"use strict";function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}n.d(t,{Z:function(){return r}})},17375:function(e,t,n){"use strict";function r(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}n.d(t,{Z:function(){return r}})},3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"===typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(n),d=a,f=m["".concat(p,".").concat(d)]||m[d]||s[d]||o;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"===typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"===typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},96086:function(e){"use strict";var t=Object.assign.bind(Object);e.exports=t,e.exports.default=e.exports},39535:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return c}});var r,a=n(22122),o=n(17375),i=n(67294),l=n(3905),p=(i.createElement,r="CodeTab",function(e){return console.warn("Component "+r+" was not imported, exported, or provided by MDXProvider as global scope"),(0,l.kt)("div",e)}),u={};function c(e){var t=e.components,n=(0,o.Z)(e,["components"]);return(0,l.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"mutation"},"Mutation"),(0,l.kt)("p",null,"ReScript has great traditional imperative & mutative programming capabilities. You should use these features sparingly, but sometimes they allow your code to be more performant and written in a more familiar pattern."),(0,l.kt)("h2",{id:"mutate-let-binding"},"Mutate Let-binding"),(0,l.kt)("p",null,"Let-bindings are immutable, but you can wrap it with a ",(0,l.kt)("inlineCode",{parentName:"p"},"ref"),", exposed as a record with a single mutable field in the standard library:"),(0,l.kt)(p,{labels:["ReScript","JS Output"],mdxType:"CodeTab"},(0,l.kt)("pre",null,(0,l.kt)("code",(0,a.Z)({parentName:"pre"},{className:"language-res",metastring:"prelude",prelude:!0}),"let myValue = ref(5)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",(0,a.Z)({parentName:"pre"},{className:"language-js"}),"var myValue = {\n  contents: 5\n};\n"))),(0,l.kt)("h2",{id:"usage"},"Usage"),(0,l.kt)("p",null,"You can get the actual value of a ",(0,l.kt)("inlineCode",{parentName:"p"},"ref")," box through accessing its ",(0,l.kt)("inlineCode",{parentName:"p"},"contents")," field:"),(0,l.kt)(p,{labels:["ReScript","JS Output"],mdxType:"CodeTab"},(0,l.kt)("pre",null,(0,l.kt)("code",(0,a.Z)({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),"let five = myValue.contents // 5\n")),(0,l.kt)("pre",null,(0,l.kt)("code",(0,a.Z)({parentName:"pre"},{className:"language-js"}),"var five = myValue.contents;\n"))),(0,l.kt)("p",null,"Assign a new value to ",(0,l.kt)("inlineCode",{parentName:"p"},"myValue")," like so:"),(0,l.kt)(p,{labels:["ReScript","JS Output"],mdxType:"CodeTab"},(0,l.kt)("pre",null,(0,l.kt)("code",(0,a.Z)({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),"myValue.contents = 6\n")),(0,l.kt)("pre",null,(0,l.kt)("code",(0,a.Z)({parentName:"pre"},{className:"language-js"}),"myValue.contents = 6;\n"))),(0,l.kt)("p",null,"We provide a syntax sugar for this:"),(0,l.kt)(p,{labels:["ReScript","JS Output"],mdxType:"CodeTab"},(0,l.kt)("pre",null,(0,l.kt)("code",(0,a.Z)({parentName:"pre"},{className:"language-res",metastring:"example",example:!0}),"myValue := 6\n")),(0,l.kt)("pre",null,(0,l.kt)("code",(0,a.Z)({parentName:"pre"},{className:"language-js"}),"myValue.contents = 6;\n"))),(0,l.kt)("p",null,"Note that the previous binding ",(0,l.kt)("inlineCode",{parentName:"p"},"five")," stays ",(0,l.kt)("inlineCode",{parentName:"p"},"5"),", since it got the underlying item on the ",(0,l.kt)("inlineCode",{parentName:"p"},"ref")," box, not the ",(0,l.kt)("inlineCode",{parentName:"p"},"ref")," itself."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Note"),": you might see in the JS output tabs above that ",(0,l.kt)("inlineCode",{parentName:"p"},"ref")," allocates an object. Worry not; local, non-exported ",(0,l.kt)("inlineCode",{parentName:"p"},"ref"),"s allocations are optimized away."),(0,l.kt)("h2",{id:"tip--tricks"},"Tip & Tricks"),(0,l.kt)("p",null,"Before reaching for ",(0,l.kt)("inlineCode",{parentName:"p"},"ref"),', know that you can achieve lightweight, local "mutations" through ',(0,l.kt)("a",(0,a.Z)({parentName:"p"},{href:"let-binding.md#binding-shadowing"}),"overriding let bindings"),"."))}c.isMDXComponent=!0,c.frontmatter={title:"Mutation",description:"Imperative and mutative programming capabilities in ReScript",canonical:"/docs/manual/latest/mutation",__ghEditHref:"https://github.com/reason-association/rescript-lang.org/blob/master/pages/docs/manual/v9.0.0/mutation.mdx"}},25150:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/manual/v9.0.0/mutation",function(){return n(39535)}])}},function(e){e.O(0,[49774],(function(){return t=25150,e(e.s=t);var t}));var t=e.O();_N_E=t}]);