(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[92469],{22122:function(e,t,r){"use strict";function n(){return(n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}r.d(t,{Z:function(){return n}})},17375:function(e,t,r){"use strict";function n(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}r.d(t,{Z:function(){return n}})},3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return p},kt:function(){return m}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),s=function(e){var t=n.useContext(u),r=t;return e&&(r="function"===typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(r),m=o,f=d["".concat(u,".").concat(m)]||d[m]||c[m]||a;return r?n.createElement(f,i(i({ref:t},p),{},{components:r})):n.createElement(f,i({ref:t},p))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"===typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"===typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},96086:function(e){"use strict";var t=Object.assign.bind(Object);e.exports=t,e.exports.default=e.exports},64338:function(e,t,r){"use strict";r.r(t),r.d(t,{default:function(){return u}});var n=r(22122),o=r(17375),a=r(67294),i=r(3905),l=(a.createElement,{});function u(e){var t=e.components,r=(0,o.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"better-data-structures-printing-debug-mode"},"Better Data Structures Printing Debug Mode"),(0,i.kt)("p",null,"You might have seen that using ",(0,i.kt)("inlineCode",{parentName:"p"},"Js.log")," to print records, variants and others don't print out record field names and variant tags. Record, for example, is compiled into an array (the field names are removed). This is partially for performance, and partially because of ","[insert excuse here]","."),(0,i.kt)("p",null,"To remediate this, we introduce a flag for ",(0,i.kt)("inlineCode",{parentName:"p"},"bsc")," (the BuckleScript compiler), ",(0,i.kt)("inlineCode",{parentName:"p"},"-bs-g"),", that retains record fields names, variant tags, exception names, module names, etc."),(0,i.kt)("table",null,(0,i.kt)("thead",null," ",(0,i.kt)("tr",null,(0,i.kt)("th",null,"Before"),(0,i.kt)("th",null,"After"))," "),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("img",{src:"/static/img/debugger-before.png",alt:"debugger before"})),(0,i.kt)("td",{style:"vertical-align: middle"},(0,i.kt)("img",{src:"/static/img/debugger-after.png",alt:"debugger after"}))))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Note"),": this is for ",(0,i.kt)("strong",{parentName:"p"},"debugging only"),". Please don't forget to undo this for production."),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Add ",(0,i.kt)("inlineCode",{parentName:"li"},'"bsc-flags": ["-bs-g"]')," to your ",(0,i.kt)("inlineCode",{parentName:"li"},"bsconfig.json"),"."),(0,i.kt)("li",{parentName:"ul"},"In the BuckleScript/Reason file you'd like to debug, add ",(0,i.kt)("inlineCode",{parentName:"li"},"[%%debugger.chrome]")," at the top ","*","."),(0,i.kt)("li",{parentName:"ul"},"If you're on Node.js, run: ",(0,i.kt)("inlineCode",{parentName:"li"},"node --inspect-brk MyCompiledFile.js")," and open this URL in Chrome: ",(0,i.kt)("inlineCode",{parentName:"li"},"chrome://inspect"),"."),(0,i.kt)("li",{parentName:"ul"},"Make sure you've got ",(0,i.kt)("a",(0,n.Z)({parentName:"li"},{href:"http://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html"}),"Chrome custom formatter enabled"),"."),(0,i.kt)("li",{parentName:"ul"},"Click on inspect, then step through code as you would usually:")),(0,i.kt)("p",null,(0,i.kt)("img",(0,n.Z)({parentName:"p"},{src:"/static/img/debugger-inspector.png",alt:"debugger inspector"}))),(0,i.kt)("p",null,"This custom formatter is still experimental; feel free to contribute to it ",(0,i.kt)("a",(0,n.Z)({parentName:"p"},{href:"https://github.com/BuckleScript/bucklescript/blob/master/jscomp/others/belt_Debug.ml"}),"here"),"!"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Note"),": you need to restart ",(0,i.kt)("inlineCode",{parentName:"p"},"node")," every time your files changes."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Note"),": don't forget to remove ",(0,i.kt)("inlineCode",{parentName:"p"},"-bs-g")," from your ",(0,i.kt)("inlineCode",{parentName:"p"},"bsconfig.json")," for production!"),(0,i.kt)("h2",{id:"tips--tricks"},"Tips & Tricks"),(0,i.kt)("p",null,(0,i.kt)("a",(0,n.Z)({parentName:"p"},{href:"https://nodejs.org/en/docs/guides/debugging-getting-started/#inspector-clients"}),"Here are other ways")," to debug using node/Chrome."),(0,i.kt)("p",null,"*"," The extension ",(0,i.kt)("inlineCode",{parentName:"p"},"[%%debugger.chrome]")," conditionally turns on the debugger support. Feel free to keep it on at all time; it will not generate any extra garbage code ",(0,i.kt)("strong",{parentName:"p"},"unless")," you have ",(0,i.kt)("inlineCode",{parentName:"p"},"-bs-g")," flag turned on above."))}u.isMDXComponent=!0,u.frontmatter={__ghEditHref:"https://github.com/reason-association/rescript-lang.org/blob/master/pages/docs/reason-compiler/latest/better-data-structures-printing-debug-mode.mdx"}},5060:function(e,t,r){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/reason-compiler/latest/better-data-structures-printing-debug-mode",function(){return r(64338)}])}},function(e){e.O(0,[49774],(function(){return t=5060,e(e.s=t);var t}));var t=e.O();_N_E=t}]);